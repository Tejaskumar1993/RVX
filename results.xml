<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="3" failures="128" skipped="0" tests="131" time="11.855" timestamp="2025-05-28T13:41:28.793501+05:30" hostname="LAPTOP-QN95QQSP"><testcase classname="tests.test_deployment_admin_account_balance" name="test_verify_account_balance_page_elements[chromium-Test_1]" time="0.539"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442615E7B0&gt;
deployment_admin_account_balance_page = &lt;pages.deployment_admin_account_balance_page.DeploymentAdminAccountBalancePage object at 0x000002442615EBA0&gt;
tab_to_navigate = 'Account Balance', transaction_record_columns_title = ['Username', 'Account', 'Type', 'Previous Balance', 'Amount', 'New Balance', ...]
available_filter_options = ['All Transactions', 'Previous Month', 'Previous Week', 'Quarter-1 : Jan-March', 'Quarter-2 : April-June', 'Quarter-3 : July-September', ...]
select_role = 'Deployment Admin'

    @dictionary_parametrize(
        {
            "Test_1": DeploymentAdminAccountBalanceParams.Test_1,
        }
    )
    @qase.title("Verify account balance page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify all available fields on deployments list page",
        ),
    )
    def test_verify_account_balance_page_elements(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            deployment_admin_account_balance_page,
            tab_to_navigate,
            transaction_record_columns_title,
            available_filter_options,
            select_role,
    ):
        """
        Regression test for account balance page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_account_balance.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442615E7B0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_account_balance" name="test_apply_filter_on_transactions_record_and_verify_data[chromium-Test_2]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244261EB890&gt;
deployment_admin_account_balance_page = &lt;pages.deployment_admin_account_balance_page.DeploymentAdminAccountBalancePage object at 0x00000244261EB9D0&gt;
tab_to_navigate = 'Account Balance'
available_filter_options = ['All Transactions', 'Previous Month', 'Previous Week', 'Quarter-1 : Jan-March', 'Quarter-2 : April-June', 'Quarter-3 : July-September', ...]
select_role = 'Deployment Admin'

    @dictionary_parametrize(
        {
            "Test_2": DeploymentAdminAccountBalanceParams.Test_2,
        }
    )
    @qase.title(
        "Verify and apply all available filter on transaction record of account balance page"
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify filtered data",
        ),
    )
    def test_apply_filter_on_transactions_record_and_verify_data(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            deployment_admin_account_balance_page,
            tab_to_navigate,
            available_filter_options,
            select_role,
    ):
        """
        Regression test for account balance  filter options verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_account_balance.py:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244261EB890&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_account_balance" name="test_verify_schedule_deposits_page_elements[chromium-Test_3]" time="0.065"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426541950&gt;
deployment_admin_account_balance_page = &lt;pages.deployment_admin_account_balance_page.DeploymentAdminAccountBalancePage object at 0x0000024426541A90&gt;
tab_to_navigate = 'Account Balance', account_balance_page_tab = 'Schedule Deposits', select_role = 'Deployment Admin'

    @dictionary_parametrize(
        {
            "Test_3": DeploymentAdminAccountBalanceParams.Test_3,
        }
    )
    @qase.title("Verify schedule deposits page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify schedule deposits page elements",
        ),
    )
    def test_verify_schedule_deposits_page_elements(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            deployment_admin_account_balance_page,
            tab_to_navigate,
            account_balance_page_tab,
            select_role,
    ):
        """
        Regression test for schedule deposits fields verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_account_balance.py:135: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426541950&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_account_balance" name="test_add_minium_account_balance_and_verify_it_in_current_auto_refills[chromium-Test_4]" time="0.065"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426524510&gt;
deployment_admin_account_balance_page = &lt;pages.deployment_admin_account_balance_page.DeploymentAdminAccountBalancePage object at 0x0000024426541D10&gt;
tab_to_navigate = 'Account Balance', account_balance_page_tab = 'Schedule Deposits', select_role = 'Deployment Admin'
confirm_message = 'Are you sure you would like to submit this change?', below_amount = '1', auto_fund_amount = '1', new_auto_fund_amount = '2'
confirm_message_of_auto_refill_deletion = 'Are you sure you want to cancel this Auto refill?'

    @dictionary_parametrize(
        {
            "Test_4": DeploymentAdminAccountBalanceParams.Test_4,
        }
    )
    @qase.title("Verify minimum account balance functionality on schedule deposits page")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify that the minimum account balance is added and reflected in current auto refills on the schedule deposits page",
        ),
    )
    def test_add_minium_account_balance_and_verify_it_in_current_auto_refills(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            deployment_admin_account_balance_page,
            tab_to_navigate,
            account_balance_page_tab,
            select_role,
            confirm_message,
            below_amount,
            auto_fund_amount,
            new_auto_fund_amount,
            confirm_message_of_auto_refill_deletion,
    ):
        """
        Regression test for the minium account balance
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_account_balance.py:186: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426524510&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_account_balance" name="test_add_set_up_new_auto_refill_and_verify_it_in_current_auto_refills[chromium-Test_5]" time="0.064"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244260C9E00&gt;
deployment_admin_account_balance_page = &lt;pages.deployment_admin_account_balance_page.DeploymentAdminAccountBalancePage object at 0x00000244261EB890&gt;
tab_to_navigate = 'Account Balance', account_balance_page_tab = 'Schedule Deposits', select_role = 'Deployment Admin'
confirm_message = 'Are you sure you would like to submit this change?', below_amount = '1', select_occurence = 'Monthly', new_auto_fund_amount = '2'
confirm_message_of_auto_refill_deletion = 'Are you sure you want to cancel this Auto refill?'

    @dictionary_parametrize(
        {
            "Test_5": DeploymentAdminAccountBalanceParams.Test_5,
        }
    )
    @qase.title("Verify set up new auto refill functionality on schedule deposits page")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify that the added new refill is added and reflected in current auto refills on the schedule deposits page",
        ),
    )
    def test_add_set_up_new_auto_refill_and_verify_it_in_current_auto_refills(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            deployment_admin_account_balance_page,
            tab_to_navigate,
            account_balance_page_tab,
            select_role,
            confirm_message,
            below_amount,
            select_occurence,
            new_auto_fund_amount,
            confirm_message_of_auto_refill_deletion,
    ):
        """
        Regression test for the set up new auto refill
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_account_balance.py:245: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244260C9E00&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_account_balance" name="test_add_new_card_functionality[chromium-Test_6]" time="0.071"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, select_role = 'Deployment Admin'
deployment_admin_account_balance_page = &lt;pages.deployment_admin_account_balance_page.DeploymentAdminAccountBalancePage object at 0x00000244261EB250&gt;, ontrack_password = None
tab_to_navigate = 'Account Balance', ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426159D90&gt;, account_balance_page_tab = 'Payment Method'
card_number = '5063516945005047', cvv = '234', expiry_date = '09/26', name_on_card = 'Gkwmex Ikloul', name = 'Gkwmex', addressline1 = '1306 E Belt Line Rd', city = 'Richardson'
zip = '75081', delete_message_text = 'Card deleted successfully', success_message_text = 'New card added successfully!', state_to_select = 'Texas'

    @dictionary_parametrize(
        {
            "Test_6": DeploymentAdminAccountBalanceParams.Test_6,
        }
    )
    @qase.title(
        "Verify add new card feature inside the payment method tab of account balance"
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify and add add new card feature inside the payment method tab of account balance",
        ),
    )
    def test_add_new_card_functionality(
            environment_to_run,
            ontrack_username,
            select_role,
            deployment_admin_account_balance_page,
            ontrack_password,
            tab_to_navigate,
            ontrack_login_page,
            account_balance_page_tab,
            card_number,
            cvv,
            expiry_date,
            name_on_card,
            name,
            addressline1,
            city,
            zip,
            delete_message_text,
            success_message_text,
            state_to_select,
    ):
        """
        Verify and test add new card feature inside the payment method
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_account_balance.py:312: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426159D90&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_account_balance" name="test_deposit_funds_functionality[chromium-Test_7]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, select_role = 'Deployment Admin'
deployment_admin_account_balance_page = &lt;pages.deployment_admin_account_balance_page.DeploymentAdminAccountBalancePage object at 0x00000244261EA850&gt;, ontrack_password = None
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244264C48D0&gt;, select_card = 'DINERS - 0004', tab_to_navigate = 'Account Balance'
amount_to_add = '5'

    @dictionary_parametrize(
        {
            "Test_7": DeploymentAdminAccountBalanceParams.Test_7,
        }
    )
    @qase.title("Verify deposit funds functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "deposit funds functionality should be working as expected and added funds get reflected in balance",
        ),
    )
    def test_deposit_funds_functionality(
            environment_to_run,
            ontrack_username,
            select_role,
            deployment_admin_account_balance_page,
            ontrack_password,
            ontrack_login_page,
            select_card,
            tab_to_navigate,
            amount_to_add,
    ):
        """
        Verify and test deposit funds functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_account_balance.py:370: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244264C48D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_connects" name="test_verify_connects_page_elements[chromium-Test_1]" time="0.071"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244264C7790&gt;
deployment_admin_connects_page = &lt;pages.deployment_admin_connects_page.DeploymentAdminConnectsPage object at 0x0000024425FDE660&gt;, side_navigation_item = 'Connects'
expected_title = 'Connects', filter_label = 'Filter:', filter_default_value = 'all_connects', headers_text = ['Name', 'Desc.', 'Start Date', 'End Date', 'Gift Type', 'Status', ...]
search_placeholder = 'Input Search Text'

    @dictionary_parametrize(
        {
            "Test_1": DeploymentsConnectsData.Test_1,
        }
    )
    @qase.title("Verify connects page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on connects page",
        ),
    )
    def test_verify_connects_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_connects_page,
        side_navigation_item,
        expected_title,
        filter_label,
        filter_default_value,
        headers_text,
        search_placeholder,
    ):
        """
        Regression test for connects page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_connects.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244264C7790&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_connects" name="test_apply_filter_on_connects_data[chromium-Test_2]" time="0.074"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442657C250&gt;
deployment_admin_connects_page = &lt;pages.deployment_admin_connects_page.DeploymentAdminConnectsPage object at 0x0000024426541E50&gt;, side_navigation_item = 'Connects'
available_filter_options = ['All Connects', 'Active Connects', 'Inactive Connects', 'Custom']
expected_statuses = {'Active Users': ['Active'], 'All Users': ['Active', 'Inactive'], 'Suspended Users': ['Inactive']}

    @dictionary_parametrize(
        {
            "Test_2": DeploymentsConnectsData.Test_2,
        }
    )
    @qase.title("Apply filter on connects data and verify filtered data on connects")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Apply filter on connects data and verify filtered data on connects",
        ),
    )
    def test_apply_filter_on_connects_data(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        #role_to_change,
        deployment_admin_connects_page,
        side_navigation_item,
        available_filter_options,
        expected_statuses,
    ):
        """
        Regression test for connects filter functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_connects.py:94: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442657C250&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_connects" name="test_send_egift_single_item_via_email[chromium-Test_3]" time="0.065"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442657D750&gt;
menu_to_select = 'Connects', Select_Ontrack_Connect_Type = 'On Track eGift', Internal_Connect_Name = 'BAnvpcDpHD', Sender_Name = 'YWWkluXbob'
Connect_Description = 'flexible intuitive enterprise-grade next-gen scalable enterprise-grade cloud-based intuitive adaptive enterprise-grad... enterprise-grade high-performance intuitive enterprise-grade reliable high-performance adaptive automated cloud-based'
Start_Date = '2025-05-29', End_Date = '2025-06-20', Days_expires = '7 Days', Assign_token = 'TestName', via_email = 'Email', Success_message = 'Activate Connect Successfully'
deployment_admin_connects_page = &lt;pages.deployment_admin_connects_page.DeploymentAdminConnectsPage object at 0x00000244265411D0&gt;

    @dictionary_parametrize({
        "Test_3": DeploymentsConnectsData.Test_3})
    @qase.title("Verify Connect Creation with E-Gift (Single Item) via email")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        ("description", "Verify Connect creation with an e-gift single item via email."),
    )
    def test_send_egift_single_item_via_email(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        #role_to_change,
        menu_to_select,
        Select_Ontrack_Connect_Type,
        Internal_Connect_Name,
        Sender_Name,
        Connect_Description,
        Start_Date,
        End_Date,
        Days_expires,
        Assign_token,
        via_email,
        Success_message,
        deployment_admin_connects_page,
    ):
        """
           Regression test to verify Connects creation with e-gift (single item).
           """
    
        # 1. Navigate to OnTrack login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_connects.py:145: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442657D750&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_connects" name="test_send_egift_single_item_via_shareable_link[chromium-Test_4]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426646210&gt;
menu_to_select = 'Connects', Select_Ontrack_Connect_Type = 'On Track eGift', Internal_Connect_Name = 'uoKEBSHIyf', Sender_Name = 'lufjutnkqW'
Connect_Description = 'next-gen cloud-based real-time intuitive automated user-friendly reliable enterprise-grade high-performance user-friendly next-gen scalable innovative cloud-based user-friendly next-gen scalable high-performance real-time secure'
Start_Date = '2025-06-25', End_Date = '2025-06-29', Days_expires = '7 Days', Assign_token = 'TestName', via_shareable_link = 'Shareable Link'
Success_message = 'Activate Connect Successfully', deployment_admin_connects_page = &lt;pages.deployment_admin_connects_page.DeploymentAdminConnectsPage object at 0x00000244265416D0&gt;

    @dictionary_parametrize({"Test_4": DeploymentsConnectsData.Test_4})
    @qase.title("Verify Connect Creation with E-Gift (Single Item) via Shareable Link")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        ("description", "Verify Connect creation with an e-gift single item via shareable link."),
    )
    
    def test_send_egift_single_item_via_shareable_link(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        menu_to_select,
        Select_Ontrack_Connect_Type,
        Internal_Connect_Name,
        Sender_Name,
        Connect_Description,
        Start_Date,
        End_Date,
        Days_expires,
        Assign_token,
        via_shareable_link,
        Success_message,
        deployment_admin_connects_page,
    ):
        """
           Regression test to verify Connects creation with e-gift (single item).
           """
    
        # 1. Navigate to OnTrack login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_connects.py:199: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426646210&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_connects" name="test_send_egift_single_item_via_shareable_sms[chromium-Test_5]" time="0.065"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426489220&gt;
menu_to_select = 'Connects', Select_Ontrack_Connect_Type = 'On Track eGift', Internal_Connect_Name = 'QnxUSbXniZ', Sender_Name = 'EGEojCPYuq'
Connect_Description = 'next-gen next-gen innovative adaptive cloud-based real-time reliable adaptive automated real-time secure cloud-based scalable scalable automated high-performance cloud-based adaptive intuitive next-gen'
Start_Date = '2025-06-11', End_Date = '2025-06-06', Days_expires = '7 Days', Assign_token = 'TestName', via_sms = 'SMS', Success_message = 'Activate Connect Successfully'
deployment_admin_connects_page = &lt;pages.deployment_admin_connects_page.DeploymentAdminConnectsPage object at 0x00000244261E8B90&gt;

    @dictionary_parametrize({
        "Test_5": DeploymentsConnectsData.Test_5})
    @qase.title("Verify Connect Creation with E-Gift (Single Item) via shareable sms")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        ("description", "Verify Connect creation with an e-gift single item via shareable sms."),
    )
    def test_send_egift_single_item_via_shareable_sms(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        #role_to_change,
        menu_to_select,
        Select_Ontrack_Connect_Type,
        Internal_Connect_Name,
        Sender_Name,
        Connect_Description,
        Start_Date,
        End_Date,
        Days_expires,
        Assign_token,
        via_sms,
        Success_message,
        deployment_admin_connects_page,
    ):
        """
           Regression test to verify Connects creation with e-gift (single item).
           """
    
        # 1. Navigate to OnTrack login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_connects.py:254: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426489220&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_connects" name="test_send_egift_single_item_via_sender_choice[chromium-Test_6]" time="0.064"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244260BFCB0&gt;
menu_to_select = 'Connects', Select_Ontrack_Connect_Type = 'On Track eGift', Internal_Connect_Name = 'QulxOGxTCM', Sender_Name = 'hgtNiOeyqe'
Connect_Description = 'automated flexible real-time next-gen automated innovative scalable innovative next-gen secure reliable user-friendly reliable scalable high-performance seamless next-gen flexible reliable real-time'
Start_Date = '2025-06-03', End_Date = '2025-06-25', Days_expires = '7 Days', Assign_token = 'TestName', via_sender_Choice = "Sender's Choice"
Success_message = 'Activate Connect Successfully', deployment_admin_connects_page = &lt;pages.deployment_admin_connects_page.DeploymentAdminConnectsPage object at 0x00000244261EAD50&gt;

    @dictionary_parametrize({
        "Test_6": DeploymentsConnectsData.Test_6})
    @qase.title("Verify Connect Creation with E-Gift (Single Item) via sender choice")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        ("description", "Verify Connect creation with an e-gift single item via sender choice."),
    )
    def test_send_egift_single_item_via_sender_choice(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            # role_to_change,
            menu_to_select,
            Select_Ontrack_Connect_Type,
            Internal_Connect_Name,
            Sender_Name,
            Connect_Description,
            Start_Date,
            End_Date,
            Days_expires,
            Assign_token,
            via_sender_Choice,
            Success_message,
            deployment_admin_connects_page,
    ):
        """
           Regression test to verify Connects creation with e-gift (single item).
           """
    
        # 1. Navigate to OnTrack login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_connects.py:309: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244260BFCB0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_connects" name="test_verify_connects_with_egift_range_item_functionality[chromium-Test_7]" time="0.064"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265697F0&gt;
menu_to_select = 'Connects', Custom_Value = '57', Select_Ontrack_Connect_Type = 'On Track eGift', Internal_Connect_Name = 'cUbvBkVUTX', Sender_Name = 'lrRTROxScb'
Connect_Description = 'real-time enterprise-grade cloud-based innovative intuitive high-performance secure real-time next-gen high-performance intuitive user-friendly automated real-time enterprise-grade secure seamless flexible seamless real-time'
Start_Date = '2025-06-19', End_Date = '2025-06-24', Days_expires = '7 Days', Assign_token = 'TestName', Success_message = 'Activate Connect Successfully'
deployment_admin_connects_page = &lt;pages.deployment_admin_connects_page.DeploymentAdminConnectsPage object at 0x00000244261EB4D0&gt;

    @dictionary_parametrize({
        "Test_7": DeploymentsConnectsData.Test_7})
    @qase.title("Verify Connect Creation with E-Gift (Range Item)")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        ("description", "Verify Connect creation with an e-gift range item."),
    )
    def test_verify_connects_with_egift_range_item_functionality(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            #role_to_change,
            menu_to_select,
            Custom_Value,
            Select_Ontrack_Connect_Type,
            Internal_Connect_Name,
            Sender_Name,
            Connect_Description,
            Start_Date,
            End_Date,
            Days_expires,
            Assign_token,
            Success_message,
            deployment_admin_connects_page):
        """
           Regression test to verify Connects creation with e-gift (Range item).
           """
    
        # 1. Navigate to OnTrack login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_connects.py:417: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265697F0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_connects" name="test_verify_connects_with_direct_2_prospect_functionality[chromium-Test_8]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426612DD0&gt;
menu_to_select = 'Connects', Select_Ontrack_Connect_Type = 'Marketplace', Internal_Connect_Name = 'rbgOMFEUgs', Sender_Name = 'xSljOpQVWB'
Connect_Description = 'secure enterprise-grade next-gen innovative user-friendly intuitive automated reliable seamless user-friendly user-friendly enterprise-grade scalable adaptive seamless seamless flexible scalable cloud-based seamless'
Start_Date = '2025-06-09', End_Date = '2025-06-16', Days_expires = '7 Days', Assign_token = 'TestName', Success_message = 'Activate Connect Successfully'
deployment_admin_connects_page = &lt;pages.deployment_admin_connects_page.DeploymentAdminConnectsPage object at 0x0000024426540690&gt;

    @dictionary_parametrize({
        "Test_8": DeploymentsConnectsData.Test_8
    })
    @qase.title("Verify Connect Creation with Direct to Prospect")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        ("description", "Verify Connect creation using Direct to Prospect functionality."),
    )
    def test_verify_connects_with_direct_2_prospect_functionality(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        menu_to_select,
        Select_Ontrack_Connect_Type,
        Internal_Connect_Name,
        Sender_Name,
        Connect_Description,
        Start_Date,
        End_Date,
        Days_expires,
        Assign_token,
        Success_message,
        deployment_admin_connects_page,
    ):
        """
           Regression test to verify Connects creation with Direct to Prospect.
        """
    
        # 1. Navigate to OnTrack login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_connects.py:471: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426612DD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_connects" name="test_verify_edit_connect_page_elements_single_item_add[chromium-Test_9]" time="0.063"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442664C350&gt;
menu_to_select = 'Connects', success_message_text = 'Edit Connect Successfully'
deployment_admin_connects_page = &lt;pages.deployment_admin_connects_page.DeploymentAdminConnectsPage object at 0x0000024426541E50&gt;

    @dictionary_parametrize({
        "Test_9": DeploymentsConnectsData.Test_9})
    @qase.title("Verify Edit Connect Page Elements - Single Item Add")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        ("description", "Verify the edit connect page elements when adding a single item."),
    )
    def test_verify_edit_connect_page_elements_single_item_add(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        menu_to_select,
        success_message_text,
        deployment_admin_connects_page,
    ):
        """
        Test to verify the edit connect page elements when adding a single item.
        """
        # 1. Navigate to OnTrack login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_connects.py:512: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442664C350&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_connects" name="test_verify_edit_connect_page_elements_range_item_add[chromium-Test_10]" time="0.070"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442664D490&gt;
menu_to_select = 'Connects', Custom_Value = '66', success_message_text = 'Edit Connect Successfully'
deployment_admin_connects_page = &lt;pages.deployment_admin_connects_page.DeploymentAdminConnectsPage object at 0x0000024426540A50&gt;

    @dictionary_parametrize({
        "Test_10": DeploymentsConnectsData.Test_10})
    @qase.title("Verify Edit Connect Page Elements - Range Item Add")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        ("description", "Verify the edit connect page elements when adding a range of items."),
    )
    def test_verify_edit_connect_page_elements_range_item_add(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        menu_to_select,
        Custom_Value,
        success_message_text,
        deployment_admin_connects_page,
        ):
        """
        Test to verify the  edit connect page elements when adding a range of items.
        """
        # 1. Navigate to OnTrack login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_connects.py:548: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442664D490&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_dashboard" name="test_verify_dashboard_page_elements[chromium-Test_1]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265290D0&gt;
deployment_admin_dashboard_page = &lt;pages.deployment_admin_dashboard_page.DeploymentAdminDashboardPage object at 0x0000024425FDF620&gt;, role_to_change = 'Deployment Admin'
user_data_table_headers = ['ID', 'First Name', 'Last Name', 'Email', 'Phone Number', 'Items Sent'], item_data_table_headers = ['ID', 'Name', 'Price', 'Sends', 'Status']
newest_sends_data_table_headers = ['Name', 'Description', 'Order Count', 'Status']

    @dictionary_parametrize(
        {
            "Test_1": DeploymentAdminDashboardParams.Test_1,
        }
    )
    @qase.title("Verify deployment admin Dashboard elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all fields of deployment admin Dashboard",
        ),
    )
    def test_verify_dashboard_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_dashboard_page,
        role_to_change,
        user_data_table_headers,
        item_data_table_headers,
        newest_sends_data_table_headers,
    ):
        """
        Regression test for items list page fields verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_dashboard.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265290D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_items_list" name="test_verify_items_list_page_elements[chromium-Test_1]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442652AF10&gt;
deployment_admin_items_list_page = &lt;pages.deployment_admin_items_list_page.DeploymentAdminItemsListPage object at 0x0000024425FDE660&gt;, tab_to_navigate = 'Items List'
role_to_change = 'Deployment Admin', headers_text = ['Thumbnail', 'ID', 'Display Name', 'Price', 'Status', 'Actions']

    @dictionary_parametrize(
        {
            "Test_1": DeploymentAdminItemsListParams.Test_1,
        }
    )
    @qase.title("Verify deployment admin items list page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify all fields of deployment admin items list page",
        ),
    )
    def test_verify_items_list_page_elements(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            deployment_admin_items_list_page,
            tab_to_navigate,
            role_to_change,
            headers_text,
    ):
        """
        Regression test for items list page fields verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_items_list.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442652AF10&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_items_list" name="test_apply_filter_on_items_list_data[chromium-Test_2]" time="0.070"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244264B3E30&gt;
deployment_admin_items_list_page = &lt;pages.deployment_admin_items_list_page.DeploymentAdminItemsListPage object at 0x00000244261E8F50&gt;, tab_to_navigate = 'Items List'
available_filter_options = ['All Items', 'Activated Items', 'Deactivated Items', 'Custom']
expected_statuses = {'Activated Items': ['Activated'], 'All Items': ['Activated', 'Deactivated'], 'Custom': ['Deactivated'], 'Deactivated Items': ['Deactivated']}

    @dictionary_parametrize(
        {
            "Test_2": DeploymentAdminItemsListParams.Test_2,
        }
    )
    @qase.title("Apply filter on items list data and verify filtered data on items list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Apply filter on items list data and verify filtered data on items list",
        ),
    )
    def test_apply_filter_on_items_list_data(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            #role_to_change,
            deployment_admin_items_list_page,
            tab_to_navigate,
            available_filter_options,
            expected_statuses,
    ):
        """
        Regression test for items list filter functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_items_list.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244264B3E30&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_items_list" name="test_apply_batch_action_on_items_to_changes_current_status_in_bulk[chromium-Test_3]" time="0.088"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442656C730&gt;
role_to_change = 'Deployment Admin', deployment_admin_items_list_page = &lt;pages.deployment_admin_items_list_page.DeploymentAdminItemsListPage object at 0x00000244261E8910&gt;
tab_to_navigate = 'Items List'

    @dictionary_parametrize(
        {
            "Test_3": DeploymentAdminItemsListParams.Test_3,
        }
    )
    @qase.title("Apply batch action on item to change status of items")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "apply batch action on multiple items at time to change status",
        ),
    )
    def test_apply_batch_action_on_items_to_changes_current_status_in_bulk(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            role_to_change,
            deployment_admin_items_list_page,
            tab_to_navigate,
    ):
        """
        Regression test for batch action functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_items_list.py:132: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442656C730&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_items_list" name="test_add_item_flow[chromium-Test_4]" time="0.064"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426618170&gt;
role_to_change = 'Deployment Admin', headers_text_of_summary = ['ID', 'Item Name', 'Price', 'Status']
deployment_admin_items_list_page = &lt;pages.deployment_admin_items_list_page.DeploymentAdminItemsListPage object at 0x0000024426542710&gt;, tab_to_navigate = 'Items List'
headers_text = ['ID', 'Thumbnail', 'Item Name', 'Price', 'Status']

    @dictionary_parametrize(
        {
            "Test_4": DeploymentAdminItemsListParams.Test_4,
        }
    )
    @qase.title("Verify items list add item functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "using add item functionality, Add item to the user list",
        ),
    )
    def test_add_item_flow(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            role_to_change,
            headers_text_of_summary,
            deployment_admin_items_list_page,
            tab_to_navigate,
            headers_text,
    ):
        """
        Regression test for add item functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_items_list.py:177: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426618170&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_items_list" name="test_item_information_component_and_tabs[chromium-Test_5]" time="0.064"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265DC550&gt;
role_to_change = 'Deployment Admin', tab_to_change = 'Send Orders'
deployment_admin_items_list_page = &lt;pages.deployment_admin_items_list_page.DeploymentAdminItemsListPage object at 0x00000244265402D0&gt;, tab_to_navigate = 'Items List'
headers_text = ['Thumbnail', 'ID', 'Date Created', 'Tracking Number', 'Date Sent', 'Status']

    @dictionary_parametrize(
        {
            "Test_5": DeploymentAdminItemsListParams.Test_5,
        }
    )
    @qase.title("Verify items information pop-up details")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify item information both tabs fields",
        ),
    )
    def test_item_information_component_and_tabs(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            role_to_change,
            tab_to_change,
            deployment_admin_items_list_page,
            tab_to_navigate,
            headers_text,
    ):
        """
        Regression test for item information
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_items_list.py:224: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265DC550&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_items_list" name="test_filter_functionality_inside_add_item_feature[chromium-Test_6]" time="0.071"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266A8C50&gt;
available_filter_options = ['All Items', 'Custom']
deployment_admin_items_list_page = &lt;pages.deployment_admin_items_list_page.DeploymentAdminItemsListPage object at 0x00000244261E8CD0&gt;, tab_to_navigate = 'Items List'
expected_statuses = {'All Items': ['Activated'], 'Custom': ['Activated']}

    @dictionary_parametrize(
        {
            "Test_6": DeploymentAdminItemsListParams.Test_6,
        }
    )
    @qase.title("Verify add items filters functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify add item filter functionality",
        ),
    )
    def test_filter_functionality_inside_add_item_feature(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            #role_to_change,
            available_filter_options,
            deployment_admin_items_list_page,
            tab_to_navigate,
            expected_statuses,
    ):
        """
        Regression test for filter functionality of add item page
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_items_list.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266A8C50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_items_list" name="test_actions_on_the_items_list[chromium-Test_7]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668C3D0&gt;
role_to_change = 'Deployment Admin', deployment_admin_items_list_page = &lt;pages.deployment_admin_items_list_page.DeploymentAdminItemsListPage object at 0x00000244261EAFD0&gt;
tab_to_navigate = 'Items List', tab_to_change = 'Send Orders', headers_text = ['Thumbnail', 'ID', 'Date Created', 'Tracking Number', 'Date Sent', 'Status']

    @dictionary_parametrize(
        {
            "Test_7": DeploymentAdminItemsListParams.Test_5,
        }
    )
    @qase.title("Verify actions functionality on items list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify and perform actions functionality on items list",
        ),
    )
    def test_actions_on_the_items_list(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            role_to_change,
            deployment_admin_items_list_page,
            tab_to_navigate,
            tab_to_change,
            headers_text,
    ):
        """
        Regression test for actions functionality of add item page
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_items_list.py:318: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668C3D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_email_templates_page_elements[chromium-Test_1]" time="0.070"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668D0D0&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x0000024425FDE660&gt;
tab_to_navigate = 'Message Templates', templates_data_table_headers = ['Name', 'Visibility', 'Actions']
available_filter_options = ['All Templates', 'Public Templates', 'Private Templates'], select_role = 'Deployment Admin'

    @dictionary_parametrize(
        {
            "Test_1": DeploymentAdminMessageTemplatesParams.Test_1,
        }
    )
    @qase.title("Verify email templates page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on email templates page",
        ),
    )
    def test_verify_email_templates_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        templates_data_table_headers,
        available_filter_options,
        select_role,
    ):
        """
        Regression test for message templates page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668D0D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_sms_templates_page_elements[chromium-Test_2]" time="0.070"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265E2350&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x00000244265411D0&gt;
tab_to_navigate = 'Message Templates', templates_data_table_headers = ['Name', 'Visibility', 'Actions']
available_filter_options = ['All Templates', 'Public Templates', 'Private Templates'], select_role = 'Deployment Admin', templates_tab_to_change = 'SMS Templates'

    @dictionary_parametrize(
        {
            "Test_2": DeploymentAdminMessageTemplatesParams.Test_2,
        }
    )
    @qase.title("Verify sms templates page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on sms templates page",
        ),
    )
    def test_verify_sms_templates_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        templates_data_table_headers,
        available_filter_options,
        select_role,
        templates_tab_to_change,
    ):
        """
        Regression test for sms templates page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265E2350&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_d2p_templates_page_elements[chromium-Test_3]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442665A050&gt;
templates_tab_to_change = 'D2P Templates'
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x0000024426540910&gt;
tab_to_navigate = 'Message Templates', templates_data_table_headers = ['Name', 'Visibility', 'Actions']
available_filter_options = ['All Templates', 'Public Templates', 'Private Templates'], select_role = 'Deployment Admin'

    @dictionary_parametrize(
        {
            "Test_3": DeploymentAdminMessageTemplatesParams.Test_3,
        }
    )
    @qase.title("Verify d2p templates page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on d2p templates page",
        ),
    )
    def test_verify_d2p_templates_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        templates_tab_to_change,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        templates_data_table_headers,
        available_filter_options,
        select_role,
    ):
        """
        Regression test for d2p templates page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442665A050&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_email_templates_filter_functionality[chromium-Test_4]" time="0.065"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426708C50&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x0000024426542E90&gt;
tab_to_navigate = 'Message Templates', expected_statuses = {'All Templates': ['Public', 'Private'], 'Private Templates': ['Private'], 'Public Templates': ['Public']}
available_filter_options = ['All Templates', 'Public Templates', 'Private Templates'], select_role = 'Deployment Admin'

    @dictionary_parametrize(
        {
            "Test_4": DeploymentAdminMessageTemplatesParams.Test_4,
        }
    )
    @qase.title("Verify email templates filter functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available filter options and check filtered data",
        ),
    )
    def test_verify_and_test_email_templates_filter_functionality(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        expected_statuses,
        available_filter_options,
        select_role,
    ):
        """
        Regression test for email templates filter functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426708C50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_sms_templates_filter_functionality[chromium-Test_5]" time="0.062"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442647ACD0&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x00000244261E96D0&gt;
tab_to_navigate = 'Message Templates', expected_statuses = {'All Templates': ['Public', 'Private'], 'Private Templates': ['Private'], 'Public Templates': ['Public']}
available_filter_options = ['All Templates', 'Public Templates', 'Private Templates'], select_role = 'Deployment Admin', templates_tab_to_change = 'SMS Templates'

    @dictionary_parametrize(
        {
            "Test_5": DeploymentAdminMessageTemplatesParams.Test_5,
        }
    )
    @qase.title("Verify sms templates filter functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available filter options and check filtered data",
        ),
    )
    def test_verify_and_test_sms_templates_filter_functionality(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        expected_statuses,
        available_filter_options,
        select_role,
        templates_tab_to_change,
    ):
        """
        Regression test for sms templates filter functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:240: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442647ACD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_d2p_templates_filter_functionality[chromium-Test_6]" time="0.069"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426616550&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x00000244261E8690&gt;
tab_to_navigate = 'Message Templates', expected_statuses = {'All Templates': ['Public', 'Private'], 'Private Templates': ['Private'], 'Public Templates': ['Public']}
available_filter_options = ['All Templates', 'Public Templates', 'Private Templates'], select_role = 'Deployment Admin', templates_tab_to_change = 'D2P Templates'

    @dictionary_parametrize(
        {
            "Test_6": DeploymentAdminMessageTemplatesParams.Test_6,
        }
    )
    @qase.title("Verify d2p templates filter functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available filter options and check filtered data",
        ),
    )
    def test_verify_and_test_d2p_templates_filter_functionality(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        expected_statuses,
        available_filter_options,
        select_role,
        templates_tab_to_change,
    ):
        """
        Regression test for d2p templates filter functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426616550&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_email_templates_search_functionality[chromium-Test_7]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442654AE50&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x00000244261E87D0&gt;
tab_to_navigate = 'Message Templates', select_role = 'Deployment Admin'

    @dictionary_parametrize(
        {
            "Test_7": DeploymentAdminMessageTemplatesParams.Test_7,
        }
    )
    @qase.title("Verify email templates search functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify search functionality of email templates ",
        ),
    )
    def test_verify_and_test_email_templates_search_functionality(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        select_role,
    ):
        """
        Regression test for email templates search functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:337: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442654AE50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_sms_templates_search_functionality[chromium-Test_8]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668E7D0&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x0000024426541F90&gt;
tab_to_navigate = 'Message Templates', select_role = 'Deployment Admin', templates_tab_to_change = 'SMS Templates'

    @dictionary_parametrize(
        {
            "Test_8": DeploymentAdminMessageTemplatesParams.Test_8,
        }
    )
    @qase.title("Verify sms templates search functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify search functionality of sms templates ",
        ),
    )
    def test_verify_and_test_sms_templates_search_functionality(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        select_role,
        templates_tab_to_change,
    ):
        """
        Regression test for sms templates search functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:381: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668E7D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_d2p_templates_search_functionality[chromium-Test_9]" time="0.069"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442670AF50&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x0000024426543750&gt;
tab_to_navigate = 'Message Templates', select_role = 'Deployment Admin', templates_tab_to_change = 'D2P Templates'

    @dictionary_parametrize(
        {
            "Test_9": DeploymentAdminMessageTemplatesParams.Test_9,
        }
    )
    @qase.title("Verify d2p templates search functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify search functionality of d2p templates ",
        ),
    )
    def test_verify_and_test_d2p_templates_search_functionality(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        select_role,
        templates_tab_to_change,
    ):
        """
        Regression test for d2p templates search functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:427: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442670AF50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_email_templates_create_new_template_functionality[chromium-Test_10]" time="0.074"><error message="failed on setup with &quot;file C:\Playwright\qa-automation-scripts\tests\test_deployment_admin_message_templates.py, line 444&#10;  @dictionary_parametrize(&#10;      {&#10;          &quot;Test_10&quot;: DeploymentAdminMessageTemplatesParams.Test_10,&#10;      }&#10;  )&#10;  @qase.title(&quot;Verify create new template functionality of email template&quot;)&#10;  # @qase.id(2)&#10;  @qase.fields(&#10;      (&quot;severity&quot;, &quot;major&quot;),&#10;      (&quot;priority&quot;, &quot;high&quot;),&#10;      (&#10;          &quot;description&quot;,&#10;          &quot;Verify create new template functionality&quot;,&#10;      ),&#10;  )&#10;  def test_verify_and_test_email_templates_create_new_template_functionality(&#10;E       fixture 'select_role' not found&#10;&gt;       available fixtures: _artifacts_recorder, _pw_artifacts_folder, _session_faker, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, deployment_admin_account_balance_page, deployment_admin_connects_page, deployment_admin_dashboard_page, deployment_admin_items_list_page, deployment_admin_message_templates_page, deployment_admin_notification_settings_page, deployment_admin_send_order_list_page, deployment_admin_token_control, deployment_admin_users_and_groups_page, device, doctest_namespace, environment_to_run, extra, extras, faker, get_page, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, logs, metadata, monkeypatch, new_context, ontrack_login_page, ontrack_password, ontrack_username, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, revosend_forgot_password, revosend_signup, sender_account_balance_page, sender_connection_list_page, sender_connects_page, sender_notification_settings_page, system_admin_dashboard_page, system_admin_deployments_page, system_admin_items_list_page, system_admin_notification_settings_page, system_admin_product_requests_page, system_admin_send_order_list_page, system_admin_users_page, system_admin_vendors_page, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, vendor_company_information_page, vendor_dashboard_page, vendor_notification_settings_page, vendor_orders_list_page, vendor_product_list_page, vendor_users_list_page, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;C:\Playwright\qa-automation-scripts\tests\test_deployment_admin_message_templates.py:444&quot;">file C:\Playwright\qa-automation-scripts\tests\test_deployment_admin_message_templates.py, line 444
  @dictionary_parametrize(
      {
          "Test_10": DeploymentAdminMessageTemplatesParams.Test_10,
      }
  )
  @qase.title("Verify create new template functionality of email template")
  # @qase.id(2)
  @qase.fields(
      ("severity", "major"),
      ("priority", "high"),
      (
          "description",
          "Verify create new template functionality",
      ),
  )
  def test_verify_and_test_email_templates_create_new_template_functionality(
E       fixture 'select_role' not found
&gt;       available fixtures: _artifacts_recorder, _pw_artifacts_folder, _session_faker, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, deployment_admin_account_balance_page, deployment_admin_connects_page, deployment_admin_dashboard_page, deployment_admin_items_list_page, deployment_admin_message_templates_page, deployment_admin_notification_settings_page, deployment_admin_send_order_list_page, deployment_admin_token_control, deployment_admin_users_and_groups_page, device, doctest_namespace, environment_to_run, extra, extras, faker, get_page, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, logs, metadata, monkeypatch, new_context, ontrack_login_page, ontrack_password, ontrack_username, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, revosend_forgot_password, revosend_signup, sender_account_balance_page, sender_connection_list_page, sender_connects_page, sender_notification_settings_page, system_admin_dashboard_page, system_admin_deployments_page, system_admin_items_list_page, system_admin_notification_settings_page, system_admin_product_requests_page, system_admin_send_order_list_page, system_admin_users_page, system_admin_vendors_page, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, vendor_company_information_page, vendor_dashboard_page, vendor_notification_settings_page, vendor_orders_list_page, vendor_product_list_page, vendor_users_list_page, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

C:\Playwright\qa-automation-scripts\tests\test_deployment_admin_message_templates.py:444</error></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_actions_on_email_templates[chromium-Test_10]" time="0.073"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266A9350&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x0000024426540550&gt;
tab_to_navigate = 'Message Templates', template_name = 'Test33', enter_text_in_paragraph = 'this is test template description'

    @dictionary_parametrize(
        {
            "Test_10": DeploymentAdminMessageTemplatesParams.Test_10,
        }
    )
    @qase.title("Verify actions(edit, delete) functionality of email templates")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify and perform actions on email templates",
        ),
    )
    def test_verify_and_test_actions_on_email_templates(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        #select_role,
        template_name,
        enter_text_in_paragraph,
    ):
        """
        Regression test for actions of email templates
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:521: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266A9350&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_d2p_templates_create_new_template_functionality[chromium-Test_11]" time="0.097"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426658450&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x00000244265411D0&gt;
tab_to_navigate = 'Message Templates', select_role = 'Deployment Admin', template_name = 'test template', templates_tab_to_change = 'D2P Templates'
enter_text_in_paragraph = 'this is test template description'

    @dictionary_parametrize(
        {
            "Test_11": DeploymentAdminMessageTemplatesParams.Test_11,
        }
    )
    @qase.title("Verify create new template functionality of d2p template")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify create new template functionality",
        ),
    )
    def test_verify_and_test_d2p_templates_create_new_template_functionality(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        select_role,
        template_name,
        templates_tab_to_change,
        enter_text_in_paragraph,
    ):
        """
        Regression test for create new template functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:569: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426658450&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_actions_on_d2p_templates[chromium-Test_11]" time="0.108"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265E21D0&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x00000244261E8910&gt;
tab_to_navigate = 'Message Templates', select_role = 'Deployment Admin', template_name = 'test template', templates_tab_to_change = 'D2P Templates'
enter_text_in_paragraph = 'this is test template description'

    @dictionary_parametrize(
        {
            "Test_11": DeploymentAdminMessageTemplatesParams.Test_11,
        }
    )
    @qase.title("Verify actions(edit, delete) functionality of d2p templates")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify and perform actions on d2p templates",
        ),
    )
    def test_verify_and_test_actions_on_d2p_templates(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        select_role,
        template_name,
        templates_tab_to_change,
        enter_text_in_paragraph,
    ):
        """
        Regression test for actions of d2p templates
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:618: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265E21D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_sms_templates_create_new_template_functionality[chromium-Test_12]" time="0.075"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265DC350&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x00000244261E8A50&gt;
tab_to_navigate = 'Message Templates', select_role = 'Deployment Admin', template_name = 'test template', templates_tab_to_change = 'SMS Templates'
enter_text_in_paragraph = 'this is test template description'

    @dictionary_parametrize(
        {
            "Test_12": DeploymentAdminMessageTemplatesParams.Test_12,
        }
    )
    @qase.title("Verify create new template functionality of sms template")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify create new template functionality",
        ),
    )
    def test_verify_and_test_sms_templates_create_new_template_functionality(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        select_role,
        template_name,
        templates_tab_to_change,
        enter_text_in_paragraph,
    ):
        """
        Regression test for create new template functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:668: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265DC350&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_message_templates" name="test_verify_and_test_actions_on_sms_templates[chromium-Test_12]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244261D9BD0&gt;
deployment_admin_message_templates_page = &lt;pages.deployment_admin_message_templates_page.DeploymentAdminMessageTemplatesPage object at 0x00000244261EAD50&gt;
tab_to_navigate = 'Message Templates', select_role = 'Deployment Admin', template_name = 'test template', templates_tab_to_change = 'SMS Templates'
enter_text_in_paragraph = 'this is test template description'

    @dictionary_parametrize(
        {
            "Test_12": DeploymentAdminMessageTemplatesParams.Test_12,
        }
    )
    @qase.title("Verify actions(edit, delete) functionality of sms templates")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify and perform actions on d2p templates",
        ),
    )
    def test_verify_and_test_actions_on_sms_templates(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_message_templates_page,
        tab_to_navigate,
        select_role,
        template_name,
        templates_tab_to_change,
        enter_text_in_paragraph,
    ):
        """
        Regression test for actions of sms templates
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_message_templates.py:718: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244261D9BD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_notification_settings" name="test_deployment_admin_notification_settings_page_elements[chromium-Test_1]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426616CD0&gt;
deployment_admin_notification = ['Select All', 'Password reset', 'User created', 'Order created', 'Funds depleted', 'Deposit receipt', ...]
deployment_admin_notification_settings_page = &lt;pages.deployment_admin_notification_settings_page.DeploymentAdminNotificationSettingsPage object at 0x0000024425E7A7B0&gt;
success_message_text = 'Notification updated successfully', change_to_notification = 'Notification Settings', select_role = 'Deployment Admin'

    @dictionary_parametrize(
        {
            "Test_1": DeploymentAdminNotificationSettingsParams.test_1,
        }
    )
    @qase.title(
        "Verify deployment admin notification settings elements and checked and unchecked functionality "
    )
    # @qase.id(1)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on system admin notification settings",
        ),
    )
    def test_deployment_admin_notification_settings_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_notification,
        deployment_admin_notification_settings_page,
        success_message_text,
        change_to_notification,
        select_role,
    ):
        """
        Regression test for deployment admin notification settings page elements and checked and unchecked functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_notification_settings.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426616CD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_send_order_list" name="test_verify_send_order_list_page_elements[chromium-Test_1]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426733450&gt;
deployment_admin_send_order_list_page = &lt;pages.deployment_admin_send_order_list_page.DeploymentAdminSendOrderList object at 0x0000024425FDE660&gt;, tab_to_navigate = 'Send Order List'
headers_text = ['Thumbnail', 'ID', 'Sent To', 'Date Created', 'Date Sent', 'Status'], prospact_header = ['Send Id', 'Send Name', 'Date Sent', 'Status']

    @dictionary_parametrize(
        {
            "Test_1": DeploymentAdminSendOrderListParams.Test_1,
        }
    )
    def test_verify_send_order_list_page_elements(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            deployment_admin_send_order_list_page,
            tab_to_navigate,
            headers_text,
            prospact_header,
            #role_to_change,
    ):
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_send_order_list.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426733450&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_send_order_list" name="test_apply_filter_on_send_order_list_data[chromium-Test_2]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266894D0&gt;
deployment_admin_send_order_list_page = &lt;pages.deployment_admin_send_order_list_page.DeploymentAdminSendOrderList object at 0x000002442669C7D0&gt;, tab_to_navigate = 'Send Order List'
available_filter_options = [['All Orders', 'Created Orders', 'Acknowledged Orders', 'Processing Orders', 'Shipped Orders', 'Completed Orders', ...]]
expected_statuses = {'Acknowledged Orders': ['Acknowledged'], 'All Users': ['Created', 'Shipped', 'Processing', 'Acknowledged'], 'Cancelled Orders': ['Cancelled'], 'Completed Orders': ['Completed'], ...}

    @dictionary_parametrize(
        {
            "Test_2": DeploymentAdminSendOrderListParams.Test_2,
        }
    )
    def test_apply_filter_on_send_order_list_data(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            #role_to_change,
            deployment_admin_send_order_list_page,
            tab_to_navigate,
            available_filter_options,
            expected_statuses,
    ):
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_send_order_list.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266894D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_token_control" name="test_verify_token_control_page_elements[chromium-Test_1]" time="0.069"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442670CD50&gt;
deployment_admin_token_control = &lt;pages.deployment_admin_token_control_page.DeploymentAdminTokenControlPage object at 0x0000024425FDE660&gt;, tab_to_navigate = 'Token Control'
token_bucket_table_headers = ['Bucket Id', 'Buckets', 'Token', 'Token Limit', 'Status', 'Actions']
available_filter_options = ['All Buckets', 'Activated Buckets', 'Deactivated Buckets', 'Custom'], select_role = 'Deployment Admin'

    @dictionary_parametrize(
        {
            "Test_1": DeploymentAdminTokenControlParams.Test_1,
        }
    )
    @qase.title("Verify token control page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on token control page",
        ),
    )
    def test_verify_token_control_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_token_control,
        tab_to_navigate,
        token_bucket_table_headers,
        available_filter_options,
        select_role,
    ):
        """
        Regression test for token control page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_token_control.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442670CD50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_token_control" name="test_verify_token_buckets_filter_functionality[chromium-Test_2]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442670DDD0&gt;
deployment_admin_token_control = &lt;pages.deployment_admin_token_control_page.DeploymentAdminTokenControlPage object at 0x00000244261EA710&gt;, tab_to_navigate = 'Token Control'
available_filter_options = ['All Buckets', 'Activated Buckets', 'Deactivated Buckets', 'Custom']
expected_statuses = {'Activated Buckets': ['Activated'], 'All Buckets': ['Activated', 'Deactivated'], 'Deactivated Buckets': ['Deactivated']}

    @dictionary_parametrize(
        {
            "Test_2": DeploymentAdminTokenControlParams.Test_2,
        }
    )
    @qase.title("apply all filter on bucket status and verify result")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "apply all filter on bucket status and verify result",
        ),
    )
    def test_verify_token_buckets_filter_functionality(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_token_control,
        tab_to_navigate,
        available_filter_options,
        expected_statuses,
        #select_role,
    ):
        """
        Regression test for filter functionality of token buckets list
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_token_control.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442670DDD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_token_control" name="test_enable_and_disable_token_bucket[chromium-Test_3]" time="0.065"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426732A50&gt;
deployment_admin_token_control = &lt;pages.deployment_admin_token_control_page.DeploymentAdminTokenControlPage object at 0x00000244261E87D0&gt;, tab_to_navigate = 'Token Control'
enable_message_text = 'Token Controls Enabled  Successfully', disable_message_text = 'Token Controls Disabled Successfully'

    @dictionary_parametrize(
        {
            "Test_3": DeploymentAdminTokenControlParams.Test_3,
        }
    )
    @qase.title("Verify token buckets enable and disable functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify token buckets enable and disable functionality",
        ),
    )
    def test_enable_and_disable_token_bucket(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_token_control,
        tab_to_navigate,
        enable_message_text,
        disable_message_text,
        #select_role,
    ):
        """
        Regression test for the token control functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_token_control.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426732A50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_token_control" name="test_add_new_bucket_manage_bucket_and_delete_bucket[chromium-Test_4]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442654A4D0&gt;
deployment_admin_token_control = &lt;pages.deployment_admin_token_control_page.DeploymentAdminTokenControlPage object at 0x0000024426543750&gt;, tab_to_navigate = 'Token Control'
tokens_count = '3', max_token = '2', total_limit = '4', bucket_description = 'XtA7xMqfcoKW8I7NTdj8', bucket_name = 'VywRU0aPRN', select_role = 'Deployment Admin'
new_description = 'this is test description'

    @dictionary_parametrize(
        {
            "Test_4": DeploymentAdminTokenControlParams.Test_4,
        }
    )
    @qase.title(
        "Verify all elements of create bucket dialog and create a new bucket,Verify and perform manage action on token bucket"
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all elements of create bucket dialog and create a new bucket , Verify and perform manage action on token bucket and delete bucket",
        ),
    )
    def test_add_new_bucket_manage_bucket_and_delete_bucket(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_token_control,
        tab_to_navigate,
        tokens_count,
        max_token,
        total_limit,
        bucket_description,
        bucket_name,
        select_role,
        new_description,
    ):
        """
        Regression test for the new token bucket creation, manage bucket and delete bucket
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_token_control.py:184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442654A4D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_users_and_groups" name="test_verify_users_and_groups_page_elements[chromium-Test_1]" time="0.071"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668A950&gt;
deployment_admin_users_and_groups_page = &lt;pages.deployment_admin_users_and_groups_page.DeploymentAdminUsersAndGroupsPage object at 0x0000024425E7A510&gt;
tab_to_navigate = 'Users &amp; Groups', users_table_headers = ['Profile Image', 'Username', 'ID', 'First Name', 'Last Name', 'Email', ...], select_role = 'Deployment Admin'

    @dictionary_parametrize(
        {
            "Test_1": DeploymentAdminUsersAndGroupsParams.Test_1,
        }
    )
    @qase.title("Verify email templates page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify all available fields on email templates page",
        ),
    )
    def test_verify_users_and_groups_page_elements(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            deployment_admin_users_and_groups_page,
            tab_to_navigate,
            users_table_headers,
            select_role,
    ):
        """
        Regression test for users &amp; groups page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_users_and_groups.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668A950&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_users_and_groups" name="test_apply_filter_on_users_data[chromium-Test_2]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C7850&gt;
select_role = 'Deployment Admin'
deployment_admin_users_and_groups_page = &lt;pages.deployment_admin_users_and_groups_page.DeploymentAdminUsersAndGroupsPage object at 0x000002442669C690&gt;
tab_to_navigate = 'Users &amp; Groups', available_filter_options = ['All Users', 'Activated', 'Deactivated', 'Custom']
expected_statuses = {'Active Users': ['Activated'], 'All Users': ['Activated'], 'Suspended Users': ['Deactivated']}

    @dictionary_parametrize(
        {
            "Test_2": DeploymentAdminUsersAndGroupsParams.Test_2,
        }
    )
    @qase.title("Apply filter on users list data and verify filtered data on users list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Apply filter on users list data and verify filtered data on users list",
        ),
    )
    def test_apply_filter_on_users_data(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            select_role,
            deployment_admin_users_and_groups_page,
            tab_to_navigate,
            available_filter_options,
            expected_statuses,
    ):
        """
        Regression test for users list filter functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_users_and_groups.py:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C7850&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_users_and_groups" name="test_apply_batch_action_on_users_to_changes_current_status_in_bulk[chromium-Test_3]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426709CD0&gt;
select_role = 'Deployment Admin'
deployment_admin_users_and_groups_page = &lt;pages.deployment_admin_users_and_groups_page.DeploymentAdminUsersAndGroupsPage object at 0x0000024426543D90&gt;
tab_to_navigate = 'Users &amp; Groups'

    @dictionary_parametrize(
        {
            "Test_3": DeploymentAdminUsersAndGroupsParams.Test_3,
        }
    )
    @qase.title("Apply batch action on users to change status of users")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "apply batch action on multiple users at time to change status",
        ),
    )
    def test_apply_batch_action_on_users_to_changes_current_status_in_bulk(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            select_role,
            deployment_admin_users_and_groups_page,
            tab_to_navigate,
    ):
        """
        Regression test for batch action functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_users_and_groups.py:135: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426709CD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_users_and_groups" name="test_invite_user_flow[chromium-Test_4]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C7B50&gt;
select_role = 'Deployment Admin', user_email = 'xojryl.tbtixc@mail.com', available_filter_options = ['Deployment Admin', 'Sender']
deployment_admin_users_and_groups_page = &lt;pages.deployment_admin_users_and_groups_page.DeploymentAdminUsersAndGroupsPage object at 0x00000244261E87D0&gt;
tab_to_navigate = 'Users &amp; Groups', user_name = 'Xojryl Tbtixc', success_message = 'Invitation sent successfully', user_type_to_select = 'Deployment Admin'

    @dictionary_parametrize(
        {
            "Test_4": DeploymentAdminUsersAndGroupsParams.Test_4,
        }
    )
    @qase.title("Verify users list invite user functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "using invite user functionality, invite user ",
        ),
    )
    def test_invite_user_flow(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            select_role,
            user_email,
            available_filter_options,
            deployment_admin_users_and_groups_page,
            tab_to_navigate,
            user_name,
            success_message,
            user_type_to_select,
    ):
        """
        Regression test for invite user functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_users_and_groups.py:183: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C7B50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_users_and_groups" name="test_suspend_and_delete_action_of_users_list[chromium-Test_5]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C64D0&gt;
select_role = 'Deployment Admin'
deployment_admin_users_and_groups_page = &lt;pages.deployment_admin_users_and_groups_page.DeploymentAdminUsersAndGroupsPage object at 0x00000244261E9E50&gt;
tab_to_navigate = 'Users &amp; Groups'

    @dictionary_parametrize(
        {
            "Test_5": DeploymentAdminUsersAndGroupsParams.Test_5,
        }
    )
    @qase.title("Verify suspend and delete action functionality on users list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify and perform suspend and delete actions functionality on users list",
        ),
    )
    def test_suspend_and_delete_action_of_users_list(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            select_role,
            deployment_admin_users_and_groups_page,
            tab_to_navigate,
    ):
        """
        Regression test for suspend and delete action functionality on users list
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_users_and_groups.py:232: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C64D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_deployment_admin_users_and_groups" name="test_manage_user_group_and_nudge_action_of_users_list[chromium-Test_6]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668E850&gt;
select_role = 'Deployment Admin', headers = ['ID', 'Name', 'description', 'Status']
deployment_admin_users_and_groups_page = &lt;pages.deployment_admin_users_and_groups_page.DeploymentAdminUsersAndGroupsPage object at 0x00000244261EAC10&gt;
tab_to_navigate = 'Users &amp; Groups', success_message = 'Groups assigned to user'

    @dictionary_parametrize(
        {
            "Test_6": DeploymentAdminUsersAndGroupsParams.Test_6,
        }
    )
    @qase.title("Verify manage user group and nudge action functionality on users list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify and perform manage user group and nudge action functionality on users list",
        ),
    )
    def test_manage_user_group_and_nudge_action_of_users_list(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            select_role,
            headers,
            deployment_admin_users_and_groups_page,
            tab_to_navigate,
            success_message,
    ):
        """
        Regression test for manage user group and nudge action functionality on users list
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_deployment_admin_users_and_groups.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668E850&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_ontrack_login_page" name="test_login_page_elements[chromium]" time="0.065"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267D38D0&gt;, ontrack_password = None, ontrack_username = None

    @qase.title("User should be able see all the required elements on login page")
    @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "User should be able see all the required elements on login page",
        ),
    )
    def test_login_page_elements(
            environment_to_run, ontrack_login_page, ontrack_password, ontrack_username
    ):
        """
        P1 Regression test for login page element verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_ontrack_login_page.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267D38D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_revosend_forgot_password" name="test_revosend_forgot_password_elements[chromium]" time="0.064"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, revosend_forgot_password = &lt;pages.revosend_forgot_password_page.SystemAdminForgotPasswordPage object at 0x0000024425FDE660&gt;

    @qase.title("User should be able to see all available fields on vendors list page")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on vendors list page",
        ),
    )
    def test_revosend_forgot_password_elements(
            environment_to_run,
            revosend_forgot_password,
    
       ):
&gt;       revosend_forgot_password.open_revosend(environment_to_run)

tests\test_revosend_forgot_password.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.revosend_forgot_password_page.SystemAdminForgotPasswordPage object at 0x0000024425FDE660&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
    
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\revosend_forgot_password_page.py:44: ValueError</failure></testcase><testcase classname="tests.test_revosend_forgot_password" name="test_revosend_forgot_password[chromium-Test_1]" time="0.073"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, revosend_forgot_password = &lt;pages.revosend_forgot_password_page.SystemAdminForgotPasswordPage object at 0x000002442669DBD0&gt;
email = 'lacakil342@deusa7.com', answer1 = 'New Jenniferside'

    @dictionary_parametrize(
        {
            "Test_1": ForgotPasswordParams.Test_1,
        }
    )
    @qase.title("User should be able to see all available fields on vendors list page")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify all available fields on vendors list page",
        ),
        )
    def test_revosend_forgot_password(
            environment_to_run,
            revosend_forgot_password,
            email,
            answer1,
       ):
    
&gt;      revosend_forgot_password.open_revosend(environment_to_run)

tests\test_revosend_forgot_password.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.revosend_forgot_password_page.SystemAdminForgotPasswordPage object at 0x000002442669DBD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
    
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\revosend_forgot_password_page.py:44: ValueError</failure></testcase><testcase classname="tests.test_revosend_signup" name="test_verify_system_admin_signup_contact_page[chromium-Test_1]" time="0.077"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, revosend_signup = &lt;pages.revosend_admin_signup_page.SystemAdminSignupPage object at 0x0000024425E7A7B0&gt;, firstname = 'Matthew', lastname = 'Gonzalez'
business_name = 'Foster Ltd', business_address1 = '5591 Carlson Light', business_address2 = 'Suite 343', city = 'Kennethmouth', zipcode = '24969', state = 'Alaska'
image_path = 'C:\\Playwright\\qa-automation-scripts\\resources\\download.jpg'

    @dictionary_parametrize({
        "Test_1": SystemAdminSignupParams.Test_1,
    })
    @qase.title("Verify system admin signup contact page elements")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all elements on the system admin signup contact page are visible and functional",
        ),
    )
    def test_verify_system_admin_signup_contact_page(
        environment_to_run,
        revosend_signup,
        firstname,
        lastname,
        business_name,
        business_address1,
        business_address2,
        city,
        zipcode,
        state,
        image_path,
    ):
        """
        Regression test for verifying system admin signup contact page elements.
        """
&gt;       revosend_signup.open_revosend(environment_to_run)

tests\test_revosend_signup.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.revosend_admin_signup_page.SystemAdminSignupPage object at 0x0000024425E7A7B0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\revosend_admin_signup_page.py:102: ValueError</failure></testcase><testcase classname="tests.test_revosend_signup" name="test_verify_system_admin_signup_login_page[chromium-Test_Combined]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, revosend_signup = &lt;pages.revosend_admin_signup_page.SystemAdminSignupPage object at 0x00000244261EA5D0&gt;, firstname = 'Matthew', lastname = 'Gonzalez'
business_name = 'Foster Ltd', business_address1 = '5591 Carlson Light', business_address2 = 'Suite 343', city = 'Kennethmouth', zipcode = '24969', state = 'Alaska'
image_path = 'C:\\Playwright\\qa-automation-scripts\\resources\\download.jpg', username = 'danny30', email = 'joseph05@example.com', phone_number = '(157)868-5404'
password = 'av6Pc$PEeV'

    @dictionary_parametrize({
        "Test_Combined": {**SystemAdminSignupParams.Test_1, **SystemAdminSignupParams.Test_2}
    })
    @qase.title("Verify system admin signup login page elements and form submission")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all elements on the system admin signup login page and successful form submission",
        ),
    )
    def test_verify_system_admin_signup_login_page(
        environment_to_run,
        revosend_signup,
        firstname,
        lastname,
        business_name,
        business_address1,
        business_address2,
        city,
        zipcode,
        state,
        image_path,
        username,
        email,
        phone_number,
        password,
    ):
        """
        Regression test for verifying system admin signup login page elements and form submission.
        """
&gt;       revosend_signup.open_revosend(environment_to_run)

tests\test_revosend_signup.py:83: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.revosend_admin_signup_page.SystemAdminSignupPage object at 0x00000244261EA5D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\revosend_admin_signup_page.py:102: ValueError</failure></testcase><testcase classname="tests.test_revosend_signup" name="test_verify_system_admin_signup_security_page[chromium-Test_Full]" time="0.065"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, revosend_signup = &lt;pages.revosend_admin_signup_page.SystemAdminSignupPage object at 0x00000244261EB250&gt;, firstname = 'Matthew', lastname = 'Gonzalez'
business_name = 'Foster Ltd', business_address1 = '5591 Carlson Light', business_address2 = 'Suite 343', city = 'Kennethmouth', zipcode = '24969', state = 'Alaska'
image_path = 'C:\\Playwright\\qa-automation-scripts\\resources\\download.jpg', username = 'danny30', email = 'joseph05@example.com', phone_number = '(157)868-5404'
password = 'av6Pc$PEeV', answer1 = 'New Eduardo', answer2 = 'compare', answer3 = 'wind'

    @dictionary_parametrize({
        "Test_Full": SystemAdminSignupParams.Test_Full
    })
    @qase.title("Verify system admin signup security questions page elements and form submission")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all elements on the system admin signup security questions page and successful form submission",
        ),
    )
    def test_verify_system_admin_signup_security_page(
        environment_to_run,
        revosend_signup,
        firstname,
        lastname,
        business_name,
        business_address1,
        business_address2,
        city,
        zipcode,
        state,
        image_path,
        username,
        email,
        phone_number,
        password,
        answer1,
        answer2,
        answer3,
    ):
        """
        Regression test for verifying system admin signup security questions page elements and form submission.
        """
&gt;       revosend_signup.open_revosend(environment_to_run)

tests\test_revosend_signup.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.revosend_admin_signup_page.SystemAdminSignupPage object at 0x00000244261EB250&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\revosend_admin_signup_page.py:102: ValueError</failure></testcase><testcase classname="tests.test_revosend_signup" name="test_full_system_admin_signup_flow[chromium-Test_Full]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, revosend_signup = &lt;pages.revosend_admin_signup_page.SystemAdminSignupPage object at 0x00000244261E8910&gt;, firstname = 'Matthew', lastname = 'Gonzalez'
business_name = 'Foster Ltd', business_address1 = '5591 Carlson Light', business_address2 = 'Suite 343', city = 'Kennethmouth', zipcode = '24969', state = 'Alaska'
image_path = 'C:\\Playwright\\qa-automation-scripts\\resources\\download.jpg', username = 'danny30', email = 'joseph05@example.com', phone_number = '(157)868-5404'
password = 'av6Pc$PEeV', answer1 = 'New Eduardo', answer2 = 'compare', answer3 = 'wind'

    @qase.title("Verify full system admin signup flow")
    @qase.fields(
        ("severity", "critical"),
        ("priority", "high"),
        (
            "description",
            "Verify the complete system admin signup flow from contact to security questions",
        ),
    )
    @dictionary_parametrize({
        "Test_Full": SystemAdminSignupParams.Test_Full
    })
    def test_full_system_admin_signup_flow(
        environment_to_run,
        revosend_signup,
        firstname,
        lastname,
        business_name,
        business_address1,
        business_address2,
        city,
        zipcode,
        state,
        image_path,
        username,
        email,
        phone_number,
        password,
        answer1,
        answer2,
        answer3,
    ):
        """
        Regression test for the complete system admin signup flow.
        """
&gt;       revosend_signup.open_revosend(environment_to_run)

tests\test_revosend_signup.py:203: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.revosend_admin_signup_page.SystemAdminSignupPage object at 0x00000244261E8910&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\revosend_admin_signup_page.py:102: ValueError</failure></testcase><testcase classname="tests.test_sender_account_balance" name="test_verify_users_and_account_balance_tab[chromium-Test_1]" time="0.071"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244264CC050&gt;
sender_account_balance_page = &lt;pages.sender_account_balance_page.SenderAccountBalancePage object at 0x0000024425FDE660&gt;, tab_to_navigate = 'Account Balance'
history_table_headers = ['Name', 'Date', 'Transaction Type', 'Previous Balance', 'Change', 'New Balance']

    @dictionary_parametrize(
        {
            "Test_1": SenderAccountBalanceParams.Test_1,
        }
    )
    @qase.title("Verify sender account balance page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify sender account balance page elements",
        ),
    )
    def test_verify_users_and_account_balance_tab(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_account_balance_page,
        tab_to_navigate,
        history_table_headers,
        #select_role,
    ):
        """
        Regression test for sender account balance page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_account_balance.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244264CC050&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_account_balance" name="test_apply_filter_on_transactions_record_and_verify_data_of_sender_account[chromium-Test_2]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267D3C50&gt;
sender_account_balance_page = &lt;pages.sender_account_balance_page.SenderAccountBalancePage object at 0x0000024426543890&gt;, tab_to_navigate = 'Account Balance'
available_filter_options = ['All Transactions', 'Previous Month', 'Previous Week', 'Quarter-1 : Jan-March', 'Quarter-2 : April-June', 'Quarter-3 : July-September', ...]

    @dictionary_parametrize(
        {
            "Test_2": SenderAccountBalanceParams.Test_2,
        }
    )
    @qase.title(
        "Verify and apply all available filter on transaction record of account balance page"
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify filtered data",
        ),
    )
    def test_apply_filter_on_transactions_record_and_verify_data_of_sender_account(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_account_balance_page,
        tab_to_navigate,
        available_filter_options,
        #select_role,
    ):
        """
        Regression test for account balance  filter options verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_account_balance.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267D3C50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_connection_list" name="test_verify_sender_connection_list_tab[chromium-Test_1]" time="0.069"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F6FD0&gt;
sender_connection_list_page = &lt;pages.sender_connection_list_page.SenderConnectionListPage object at 0x0000024425E78AD0&gt;, tab_to_navigate = 'Connection List'
headers_text = ['Recipient', 'Items', 'Sender', 'Delivery Method', 'Date', 'Status'], available_filter_options = ['All Sends', 'Custom']
expected_statuses = {'All Sends': ['Acknowledged', 'Processing', 'Shipped', 'Created', 'Completed'], 'expected_custom_filter': {'Custom': ['Recipient', 'Items', 'Sender', 'Delivery Method', 'Date', 'Status']}}

    @dictionary_parametrize(
        {
            "Test_1": SenderConnectionListParams.Test_1,
        }
    )
    @qase.title("Verify sender connection list page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify sender connection list page elements",
        ),
    )
    def test_verify_sender_connection_list_tab(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_connection_list_page,
        #select_role,
        tab_to_navigate,
        headers_text,
        available_filter_options,
        expected_statuses,
    ):
        """
        Regression test for sender connection list page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_connection_list.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F6FD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_connects" name="test_verify_connects_all_gifts_type_page_elements[chromium-Test_1]" time="0.070"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426780150&gt;
sender_connects_page = &lt;pages.sender_connects_page.SenderConnectsPage object at 0x000002442615DD30&gt;
available_filter_options = ['Customer appreciation', 'Employee appreciation', 'Luxury', 'Meeting followup', 'Door opener', 'Specialty']

    @dictionary_parametrize(
        {
            "Test_1": SenderConnectsParams.Test_1,
        }
    )
    @qase.title("Verify connects page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on connects all gifts type tab page",
        ),
    )
    def test_verify_connects_all_gifts_type_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_connects_page,
        available_filter_options,
    ):
        """
        Regression test for connects all gifts tab page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_connects.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426780150&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_connects" name="test_verify_connects_egifts_type_page_elements[chromium-Test_1]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C6DD0&gt;
sender_connects_page = &lt;pages.sender_connects_page.SenderConnectsPage object at 0x0000024426113390&gt;
available_filter_options = ['Customer appreciation', 'Employee appreciation', 'Luxury', 'Meeting followup', 'Door opener', 'Specialty']

    @dictionary_parametrize(
        {
            "Test_1": SenderConnectsParams.Test_1,
        }
    )
    @qase.title("Verify connects page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on connects egifts type tab page",
        ),
    )
    def test_verify_connects_egifts_type_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_connects_page,
        available_filter_options,
    ):
        """
        Regression test for connects egifts tab page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_connects.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C6DD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_connects" name="test_verify_and_send_item_via_email[chromium-Test_2]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C6250&gt;
email_subject = 'Action Required', sender_connects_page = &lt;pages.sender_connects_page.SenderConnectsPage object at 0x00000244261EB4D0&gt;, recipient_email = 'ymxbupei@randommail.com'
item_category_to_select = 'Door opener', email_message = 'Action Required'

    @dictionary_parametrize(
        {
            "Test_2": SenderConnectsParams.Test_2,
        }
    )
    @qase.title("Verify and send item via email")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "verify and send item to the user via email",
        ),
    )
    def test_verify_and_send_item_via_email(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        email_subject,
        sender_connects_page,
        recipient_email,
        item_category_to_select,
        email_message,
    ):
        """
        Regression test for send item via email
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_connects.py:121: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C6250&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_connects" name="test_verify_and_send_item_via_shareable_link[chromium-Test_3]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267D02D0&gt;
sender_connects_page = &lt;pages.sender_connects_page.SenderConnectsPage object at 0x00000244261E9A90&gt;, recipient_email = 'ymxbupei@randommail.com'
item_category_to_select = 'Door opener'

    @dictionary_parametrize(
        {
            "Test_3": SenderConnectsParams.Test_3,
        }
    )
    @qase.title("Verify and send item via shareable link")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify and send item to the user via shareable link",
        ),
    )
    def test_verify_and_send_item_via_shareable_link(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_connects_page,
        recipient_email,
        item_category_to_select,
    ):
        """
        Regression test for send item via shareable link
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_connects.py:165: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267D02D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_connects" name="test_verify_and_send_item_via_sms[chromium-Test_4]" time="0.063"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668EC50&gt;
sender_connects_page = &lt;pages.sender_connects_page.SenderConnectsPage object at 0x00000244261EAFD0&gt;, item_category_to_select = 'Door opener'
recipient_phone_number = '+17170685927', text_message = 'Reminder: Your appointment is scheduled for tomorrow.', success_message = 'Connection Send Via SMS Successfully'

    @dictionary_parametrize(
        {
            "Test_4": SenderConnectsParams.Test_4,
        }
    )
    @qase.title("verify and send item via sms")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "verify and send item to the user via sms",
        ),
    )
    def test_verify_and_send_item_via_sms(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_connects_page,
        item_category_to_select,
        recipient_phone_number,
        text_message,
        success_message,
    ):
        """
        Regression test for send item via sms
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_connects.py:209: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668EC50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_connects" name="test_navigate_to_egifts_tab_and_send_item_via_email[chromium-Test_5]" time="0.073"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442678E9D0&gt;
sender_connects_page = &lt;pages.sender_connects_page.SenderConnectsPage object at 0x00000244261E8B90&gt;, item_category_to_select = 'Door opener'
recipient_email = 'ymxbupei@randommail.com', email_subject = 'Action Required', email_message = 'Action Required'
available_filter_options = ['Customer appreciation', 'Employee appreciation', 'Luxury', 'Meeting followup', 'Door opener', 'Specialty']

    @dictionary_parametrize(
        {
            "Test_5": SenderConnectsParams.Test_5,
        }
    )
    @qase.title("navigate to egifts tab and send item via sms")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Navigate to egifts tab and send item to the user via email",
        ),
    )
    def test_navigate_to_egifts_tab_and_send_item_via_email(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_connects_page,
        item_category_to_select,
        recipient_email,
        email_subject,
        email_message,
        available_filter_options,
    ):
        """
        Regression test for navigate to egifts tab send item via sms
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_connects.py:256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442678E9D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_connects" name="test_navigate_to_egifts_tab_and_send_item_via_shareable_link[chromium-Test_6]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265DDED0&gt;
sender_connects_page = &lt;pages.sender_connects_page.SenderConnectsPage object at 0x000002442669CF50&gt;, item_category_to_select = 'Door opener'
recipient_email = 'ymxbupei@randommail.com', available_filter_options = ['Customer appreciation', 'Employee appreciation', 'Luxury', 'Meeting followup', 'Door opener', 'Specialty']

    @dictionary_parametrize(
        {
            "Test_6": SenderConnectsParams.Test_6,
        }
    )
    @qase.title("navigate to egifts and send item via shareable link")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Navigate to egifts tab and send item to the user via shareable link",
        ),
    )
    def test_navigate_to_egifts_tab_and_send_item_via_shareable_link(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_connects_page,
        item_category_to_select,
        recipient_email,
        available_filter_options,
    ):
        """
        Regression test for navigate to egifts tab and send item via shareable link
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_connects.py:305: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265DDED0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_connects" name="test_navigate_to_egifts_tab_and_send_item_via_sms[chromium-Test_7]" time="0.063"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426817ED0&gt;
sender_connects_page = &lt;pages.sender_connects_page.SenderConnectsPage object at 0x00000244261EAD50&gt;, item_category_to_select = 'Door opener'
recipient_phone_number = '+17170685927', text_message = 'Reminder: Your appointment is scheduled for tomorrow.', success_message = 'Connection Send Via SMS Successfully'
available_filter_options = ['Customer appreciation', 'Employee appreciation', 'Luxury', 'Meeting followup', 'Door opener', 'Specialty']

    @dictionary_parametrize(
        {
            "Test_7": SenderConnectsParams.Test_7,
        }
    )
    @qase.title("navigate to egifts tab and send item via sms")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Navigate to egifts tab and send item to the user via SMS",
        ),
    )
    def test_navigate_to_egifts_tab_and_send_item_via_sms(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_connects_page,
        item_category_to_select,
        recipient_phone_number,
        text_message,
        success_message,
        available_filter_options,
    ):
        """
        Regression test for navigate to egifts and tab item via sms
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_connects.py:352: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426817ED0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_connects" name="test_navigate_to_ontrack_d2p_tab_and_send_gift_on_known_address[chromium-Test_8]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268161D0&gt;
sender_connects_page = &lt;pages.sender_connects_page.SenderConnectsPage object at 0x00000244261E8A50&gt;, item_category_to_select = 'Meeting followup', state = 'Colorado'
email_message = 'Reminder: Your appointment is scheduled for tomorrow.', user_address = '9584 Cedar Rd, Quebec City, Canada', user_name = 'ymxbupei', user_city = 'Quebec City'
email_subject = 'Action Required', zip_code = 'D7W 5R6', country = 'Canada'
available_filter_options = ['Customer appreciation', 'Employee appreciation', 'Luxury', 'Meeting followup', 'Door opener', 'Specialty'], recipient_email = 'ymxbupei@randommail.com'

    @dictionary_parametrize(
        {
            "Test_8": SenderConnectsParams.Test_8,
        }
    )
    @qase.title(
        "Navigate to ontrack d2p tab, verify page elements and send gift with address details"
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Navigate to ontrack d2p tab, verify page elements and send gift with known address details",
        ),
    )
    def test_navigate_to_ontrack_d2p_tab_and_send_gift_on_known_address(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_connects_page,
        item_category_to_select,
        state,
        email_message,
        user_address,
        user_name,
        user_city,
        email_subject,
        zip_code,
        country,
        available_filter_options,
        recipient_email,
    ):
        """
        Regression test for navigate to ontrack d2p tab, verify page elements and send gift with address details
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_connects.py:409: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268161D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_connects" name="test_navigate_to_ontrack_d2p_tab_and_send_gift_on_unknown_address[chromium-Test_9]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F7DD0&gt;
sender_connects_page = &lt;pages.sender_connects_page.SenderConnectsPage object at 0x00000244261EB390&gt;, item_category_to_select = 'Meeting followup'
email_message = 'Reminder: Your appointment is scheduled for tomorrow.', user_name = 'ymxbupei', email_subject = 'Action Required', recipient_email = 'ymxbupei@randommail.com'
available_filter_options = ['Customer appreciation', 'Employee appreciation', 'Luxury', 'Meeting followup', 'Door opener', 'Specialty']

    @dictionary_parametrize(
        {
            "Test_9": SenderConnectsParams.Test_9,
        }
    )
    @qase.title(
        "Navigate to ontrack d2p tab, verify page elements and send gift with unknown address details"
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Navigate to ontrack d2p tab, verify page elements and send gift with unknown address details",
        ),
    )
    def test_navigate_to_ontrack_d2p_tab_and_send_gift_on_unknown_address(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_connects_page,
        item_category_to_select,
        email_message,
        user_name,
        email_subject,
        recipient_email,
        available_filter_options,
    ):
        """
        Regression test for navigate to ontrack d2p tab, verify page elements and send gift with unknown address details
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_connects.py:467: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F7DD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_sender_notification_settings" name="test_verify_sender_notification_page_elements[chromium-Test_1]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442678DA50&gt;
sender_notification_settings_page = &lt;pages.sender_notification_settings_page.SenderNotificationPage object at 0x0000024425E78AD0&gt;, profile_option = 'Settings'
change_to_notification = 'Notification Settings', success_message_text = 'Notification updated successfully'

    @dictionary_parametrize(
        {
            "Test_1": SenderNotificationParams.test_1,
        }
    )
    @qase.title(
        "Verify Sender notification page elements and checked and unchecked functionality "
    )
    # @qase.id(1)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on vendor notification page",
        ),
    )
    def test_verify_sender_notification_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        sender_notification_settings_page,
        profile_option,
        change_to_notification,
        success_message_text,
    ):
        """
        Regression test for vendor notification page elements and checked and unchecked functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_sender_notification_settings.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442678DA50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_dashboard" name="test_verify_system_admin_dashboard_page_elements[chromium-Test_1]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426814ED0&gt;
system_admin_dashboard_page = &lt;pages.system_admin_dashboard_page.SystemAdminDashboardPage object at 0x000002442615D400&gt;

    @dictionary_parametrize(
        {
            "Test_1": SystemAdminDashboardParams.Test_1,
        }
    )
    @qase.title("Verify system admin Dashboard elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all fields of system admin Dashboard",
        ),
    )
    def test_verify_system_admin_dashboard_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        system_admin_dashboard_page,
    ):
        """
        Regression test for items list page fields verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_dashboard.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426814ED0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_deployments" name="test_verify_deployments_page_elements[chromium-Test_1]" time="0.071"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426829050&gt;
system_admin_deployments_page = &lt;pages.system_admin_deployment_page.SystemAdminDeploymentsPage object at 0x000002442615D7F0&gt;, tab_to_navigate = 'Deployments'
headers_text = ['ID', 'Name', 'Server Name', 'Database Name', 'Actions']

    @dictionary_parametrize(
        {
            "Test_1": SystemAdminDeploymentsParams.Test_1,
        }
    )
    @qase.title("User should be able to see all available fields on deployments page")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on deployments list page",
        ),
    )
    def test_verify_deployments_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        system_admin_deployments_page,
        tab_to_navigate,
        headers_text,
    ):
        """
        Regression test for deployments page fields verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_deployments.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426829050&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_deployments" name="test_batch_action_on_deployments_list[chromium-Test_2]" time="0.071"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_deployments_page = &lt;pages.system_admin_deployment_page.SystemAdminDeploymentsPage object at 0x000002442669F110&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267D36D0&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Deployments'
success_message = 'Deployment Deleted Successfully'

    @dictionary_parametrize(
        {
            "Test_2": SystemAdminDeploymentsParams.Test_2,
        }
    )
    @qase.title("system admin should be able performe batch action on users list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able apply batch actions to users list(suspended, activate)",
        ),
    )
    def test_batch_action_on_deployments_list(
        environment_to_run,
        system_admin_deployments_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
        success_message,
    ):
        """
        Regression test for users lists Batch action
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_deployments.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267D36D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_deployments" name="test_delete_single_deployment_from_deployment_list[chromium-Test_2]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_deployments_page = &lt;pages.system_admin_deployment_page.SystemAdminDeploymentsPage object at 0x0000024426542710&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442678FDD0&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Deployments'
success_message = 'Deployment Deleted Successfully'

    @dictionary_parametrize(
        {
            "Test_2": SystemAdminDeploymentsParams.Test_2,
        }
    )
    @qase.title("system admin should be able to delete single deployment from actions")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able delete single user",
        ),
    )
    def test_delete_single_deployment_from_deployment_list(
        environment_to_run,
        system_admin_deployments_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
        success_message,
    ):
        """
        Regression test for users lists delete action
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_deployments.py:121: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442678FDD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_deployments" name="test_deployments_summary_information[chromium-Test_3]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_deployments_page = &lt;pages.system_admin_deployment_page.SystemAdminDeploymentsPage object at 0x0000024426543110&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268931D0&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Deployments'

    @dictionary_parametrize(
        {
            "Test_3": SystemAdminDeploymentsParams.Test_3,
        }
    )
    @qase.title("system admin should be able to delete single deployment from actions")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able delete single user",
        ),
    )
    def test_deployments_summary_information(
        environment_to_run,
        system_admin_deployments_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
    ):
        """
        Regression test to check deployments details
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_deployments.py:161: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268931D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_deployments" name="test_deployment_summary_users_tab_filter[chromium-Test_4]" time="0.069"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_deployments_page = &lt;pages.system_admin_deployment_page.SystemAdminDeploymentsPage object at 0x0000024426542C10&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C5950&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Deployments'
available_filter_options = ['All Users', 'Active Users', 'Inactive Users', 'Custom']
expected_statuses = {'Active Users': ['Active'], 'All Users': ['Active Users', 'Inactive Users'], 'Inactive Users': ['Inactive']}

    @dictionary_parametrize(
        {
            "Test_4": SystemAdminDeploymentsParams.Test_4,
        }
    )
    @qase.title("system admin should be able to delete single deployment from actions")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able delete single user",
        ),
    )
    def test_deployment_summary_users_tab_filter(
        environment_to_run,
        system_admin_deployments_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
        available_filter_options,
        expected_statuses,
    ):
        """
        Regression test to check deployments summary users tab filter
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_deployments.py:201: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C5950&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_deployments" name="test_deployment_summary_users_tab_fields[chromium-Test_5]" time="0.078"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_deployments_page = &lt;pages.system_admin_deployment_page.SystemAdminDeploymentsPage object at 0x0000024426540050&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426691450&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Deployments'
headers_text = ['Username', 'First Name', 'Last Name', 'Email', 'Status', 'Actions']

    @dictionary_parametrize(
        {
            "Test_5": SystemAdminDeploymentsParams.Test_5,
        }
    )
    @qase.title(
        "All required fields in the Users tab should be visible within the Users section of the Deployment Summary."
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "verify users tab fields",
        ),
    )
    def test_deployment_summary_users_tab_fields(
        environment_to_run,
        system_admin_deployments_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
        headers_text,
    ):
        """
        Regression test to check deployments summary users tab fields
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_deployments.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426691450&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_deployments" name="test_deployment_summary_published_items_tab_fields[chromium-Test_6]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_deployments_page = &lt;pages.system_admin_deployment_page.SystemAdminDeploymentsPage object at 0x0000024426540E10&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024425EA2F50&gt;, ontrack_password = None, ontrack_username = None
headers_text = ['Thumbnail', 'ID', 'Name', 'Item Type', 'Price', 'Fee', ...], tab_to_navigate = 'Deployments', deployment_summary_tab_navigation = 'Published Items'

    @dictionary_parametrize(
        {
            "Test_6": SystemAdminDeploymentsParams.Test_6,
        }
    )
    @qase.title(
        "All required fields of published items should be visible on the Published Items tab of the Deployment Summary."
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "verify published items tab's fields",
        ),
    )
    def test_deployment_summary_published_items_tab_fields(
        environment_to_run,
        system_admin_deployments_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        headers_text,
        tab_to_navigate,
        deployment_summary_tab_navigation,
    ):
        """
        Regression test to check deployments summary published items tab fields
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_deployments.py:293: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024425EA2F50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_deployments" name="test_deployment_summary_sends_tab_fields[chromium-Test_7]" time="0.064"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_deployments_page = &lt;pages.system_admin_deployment_page.SystemAdminDeploymentsPage object at 0x0000024426541950&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265A5FD0&gt;, ontrack_password = None, ontrack_username = None
headers_text = ['Thumbnail', 'ID', 'Item Sent', 'Price', 'Send Date', 'Date Created', ...], tab_to_navigate = 'Deployments', deployment_summary_tab_navigation = 'Sends'

    @dictionary_parametrize(
        {
            "Test_7": SystemAdminDeploymentsParams.Test_7,
        }
    )
    @qase.title(
        "All required fields of the Sends tab should be visible inside the Sends tab of the Deployment Summary."
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify sends tab of deployment summary",
        ),
    )
    def test_deployment_summary_sends_tab_fields(
        environment_to_run,
        system_admin_deployments_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        headers_text,
        tab_to_navigate,
        deployment_summary_tab_navigation,
    ):
        """
        Regression test to check deployments summary sends tab fields
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_deployments.py:338: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265A5FD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_deployments" name="test_deployment_summary_account_balance_tab_fields[chromium-Test_8]" time="0.061"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_deployments_page = &lt;pages.system_admin_deployment_page.SystemAdminDeploymentsPage object at 0x00000244261EB9D0&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442678CA50&gt;, ontrack_password = None, ontrack_username = None, account_balance_title = 'Balance'
tab_to_navigate = 'Deployments', deployment_summary_tab_navigation = 'Account Balance'

    @dictionary_parametrize(
        {
            "Test_8": SystemAdminDeploymentsParams.Test_8,
        }
    )
    @qase.title(
        "All required account balance fields should be visible inside the Account Balance tab of the Deployment Summary."
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify deployment summary's account balance tab fields",
        ),
    )
    def test_deployment_summary_account_balance_tab_fields(
        environment_to_run,
        system_admin_deployments_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        account_balance_title,
        tab_to_navigate,
        deployment_summary_tab_navigation,
    ):
        """
        Regression test to check deployments summary account balance tab fields
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_deployments.py:382: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442678CA50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_deployments" name="test_deployment_summary_users_tab_group_actions[chromium-Test_9]" time="0.071"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_deployments_page = &lt;pages.system_admin_deployment_page.SystemAdminDeploymentsPage object at 0x0000024426541310&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265A5B50&gt;, ontrack_password = None, ontrack_username = None, error_message = 'User Suspended'
tab_to_navigate = 'Deployments', success_message = 'User Activated', available_filter_options = ['All Groups', 'Active Groups', 'Inactive Groups', 'Custom']
expected_statuses = {'Active Users': ['Active'], 'All Users': ['Active', 'Inactive'], 'Suspended Users': ['Inactive']}

    @dictionary_parametrize(
        {
            "Test_9": SystemAdminDeploymentsParams.Test_9,
        }
    )
    @qase.title(
        "System admin should be able to suspect, active and assign group to other users"
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify and perform users tab group actions",
        ),
    )
    def test_deployment_summary_users_tab_group_actions(
        environment_to_run,
        system_admin_deployments_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        error_message,
        tab_to_navigate,
        success_message,
        available_filter_options,
        expected_statuses,
    ):
        """
        Regression test to check deployments summary group actions
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_deployments.py:429: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265A5B50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_deployments" name="test_deployment_summary_user_information[chromium-Test_10]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_deployments_page = &lt;pages.system_admin_deployment_page.SystemAdminDeploymentsPage object at 0x0000024426540F50&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426688F50&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Deployments'

    @dictionary_parametrize(
        {
            "Test_10": SystemAdminDeploymentsParams.Test_3,
        }
    )
    @qase.title(
        "All Required user information should be visible inside the user information pop-up"
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verifying particular user information pop-up fields",
        ),
    )
    def test_deployment_summary_user_information(
        environment_to_run,
        system_admin_deployments_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
    ):
        """
        Regression test to check deployments summary user information
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_deployments.py:474: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426688F50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_items_list" name="test_verify_system_admin_items_list_page_elements[chromium-Test_1]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C6B50&gt;
system_admin_items_list_page = &lt;pages.system_admin_items_list_page.SystemAdminItemsListPage object at 0x0000024425E7A510&gt;, tab_to_navigate = 'Items List'
headers_text = ['Thumbnail', 'ID', 'Item Name', 'Category', 'Vendor Name', 'Description', ...]

    @dictionary_parametrize(
        {
            "Test_1": SystemAdminItemsListParams.Test_1,
        }
    )
    @qase.title("Verify element visibility on system admin items list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on system admin items list",
        ),
    )
    def test_verify_system_admin_items_list_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        system_admin_items_list_page,
        tab_to_navigate,
        headers_text,
    ):
        """
        Regression test for system admin items list fields verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_items_list.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267C6B50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_items_list" name="test_batch_action_on_items_list[chromium-Test_2]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_items_list_page = &lt;pages.system_admin_items_list_page.SystemAdminItemsListPage object at 0x0000024426541450&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266AB050&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Items List'

    @dictionary_parametrize(
        {
            "Test_2": SystemAdminItemsListParams.Test_2,
        }
    )
    @qase.title("system admin should be able performe batch action on users list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able apply batch actions to users list(suspended, activate)",
        ),
    )
    def test_batch_action_on_items_list(
        environment_to_run,
        system_admin_items_list_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
    ):
        """
        Regression test for items lists Batch action
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_items_list.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266AB050&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_items_list" name="test_filter_functionality_on_item_list[chromium-Test_3]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426693550&gt;
available_filter_options = ['All Items', 'Active Items', 'Inactive Items', 'Custom']
system_admin_items_list_page = &lt;pages.system_admin_items_list_page.SystemAdminItemsListPage object at 0x0000024426543750&gt;, tab_to_navigate = 'Items List'
expected_statuses = {'Active Users': ['Active'], 'All Users': ['Active', 'Inactive'], 'Inactive Items': ['Inactive']}

    @dictionary_parametrize(
        {
            "Test_3": SystemAdminItemsListParams.Test_3,
        }
    )
    @qase.title("Verify filters functionality on items list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify filter functionality on items list",
        ),
    )
    def test_filter_functionality_on_item_list(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        available_filter_options,
        system_admin_items_list_page,
        tab_to_navigate,
        expected_statuses,
    ):
        """
        Regression test for filter functionality of items list
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_items_list.py:119: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426693550&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_items_list" name="test_verify_filtering_functionality_on_item_list_based_on_applied_criteria[chromium-Test_4]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426829A50&gt;
system_admin_items_list_page = &lt;pages.system_admin_items_list_page.SystemAdminItemsListPage object at 0x00000244261EAE90&gt;, tab_to_navigate = 'Items List', item_price = '12'
item_fee = '2', processing_time = '1', item_status = 'Active', item_category = 'eGift', item_name = 'test_item', item_description = 'this is test item description'
tab_to_change = 'Send Orders', headers_text = ['Thumbnail', 'ID', 'Batch ID', 'Campaign', 'Date Created', 'Date Sent', ...], deployment_tab = 'Deployments'
deployments_header = ['ID', 'Deployment Name', 'Number of Sends', 'Item Status'], add_item_success_message = 'Item added successfully'

    @dictionary_parametrize(
        {
            "Test_4": SystemAdminItemsListParams.Test_4,
        }
    )
    @qase.title(
        "verify and add new item, verify added item details on item list and check item information in item information box and perform action on added item"
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify and Add a New Item, Validate Item Details on the Items List, Check Item Information in the Information Box, and Perform Actions on the Added Item",
        ),
    )
    def test_verify_filtering_functionality_on_item_list_based_on_applied_criteria(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        system_admin_items_list_page,
        tab_to_navigate,
        item_price,
        item_fee,
        processing_time,
        item_status,
        item_category,
        item_name,
        item_description,
        tab_to_change,
        headers_text,
        deployment_tab,
        deployments_header,
        add_item_success_message,
    ):
        """
        Regression test for Verify and Add a New Item, Validate Item Details on the Items List, Check Item Information in the Information Box, and Perform Actions on the Added Item
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_items_list.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426829A50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_items_list" name="test_vendor_more_info_inside_item_information[chromium-Test_5]" time="0.064"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426893DD0&gt;
system_admin_items_list_page = &lt;pages.system_admin_items_list_page.SystemAdminItemsListPage object at 0x00000244265411D0&gt;, tab_to_navigate = 'Items List'
orders_header = ['Order Number', 'Batch ID', 'Name', 'Send Time', 'Current Status'], products_header = ['ID', 'Thumbnail', 'Name', 'Current Orders']
users_header = ['ID', 'Name', 'username', 'phonenumber', 'Email']

    @dictionary_parametrize(
        {
            "Test_5": SystemAdminItemsListParams.Test_5,
        }
    )
    @qase.title("Verify and check vendor more info inside item information")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "verify and check vendor more information",
        ),
    )
    def test_vendor_more_info_inside_item_information(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        system_admin_items_list_page,
        tab_to_navigate,
        orders_header,
        products_header,
        users_header,
    ):
        """
        Regression test for verify vendor information
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_items_list.py:228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426893DD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_notification_settings" name="test_system_admin_notification_settings_page_elements[chromium-Test_1]" time="0.064"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244264AD5D0&gt;
deployment_admin_notification = ['Select All', 'New order created', 'Automatic funds adjusted', 'Funds depleted', 'Automatic refill updated', 'Deposit receipt', ...]
system_admin_notification_settings_page = &lt;pages.system_admin_notification_settings_page.SystemAdminNotificationSettingsPage object at 0x0000024425E7A510&gt;
success_message_text = 'Notification updated successfully'
sender_notification = ['Select All', 'Password reset', 'Balance notifications', 'Order status updates', 'Unclaimed eGift'], change_to_notification = 'Notification Settings'
vendor_notification = ['Select All', 'Unacknowledged orders', 'Unfulfilled orders', 'Orders created']

    @dictionary_parametrize(
        {
            "Test_1": SystemAdminNotificationSettingsParams.test_1,
        }
    )
    @qase.title(
        "Verify system admin notification settings elements and checked and unchecked functionality "
    )
    # @qase.id(1)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on system admin notification settings",
        ),
    )
    def test_system_admin_notification_settings_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        deployment_admin_notification,
        system_admin_notification_settings_page,
        success_message_text,
        sender_notification,
        change_to_notification,
        vendor_notification,
    ):
        """
        Regression test for system admin notification settings page elements and checked and unchecked functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_notification_settings.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244264AD5D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_product_requests" name="test_verify_system_admin_product_request_page_elements[chromium-Test_1]" time="0.069"><error message="failed on setup with &quot;file C:\Playwright\qa-automation-scripts\tests\test_system_admin_product_requests.py, line 11&#10;  @dictionary_parametrize(&#10;      {&#10;          &quot;Test_1&quot;: SystemAdminProductRequestParams.Test_1,&#10;      }&#10;  )&#10;  def test_verify_system_admin_product_request_page_elements(&#10;E       fixture 'system_admin_product_request_page' not found&#10;&gt;       available fixtures: _artifacts_recorder, _pw_artifacts_folder, _session_faker, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, deployment_admin_account_balance_page, deployment_admin_connects_page, deployment_admin_dashboard_page, deployment_admin_items_list_page, deployment_admin_message_templates_page, deployment_admin_notification_settings_page, deployment_admin_send_order_list_page, deployment_admin_token_control, deployment_admin_users_and_groups_page, device, doctest_namespace, environment_to_run, extra, extras, faker, get_page, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, logs, metadata, monkeypatch, new_context, ontrack_login_page, ontrack_password, ontrack_username, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, revosend_forgot_password, revosend_signup, sender_account_balance_page, sender_connection_list_page, sender_connects_page, sender_notification_settings_page, system_admin_dashboard_page, system_admin_deployments_page, system_admin_items_list_page, system_admin_notification_settings_page, system_admin_product_requests_page, system_admin_send_order_list_page, system_admin_users_page, system_admin_vendors_page, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, vendor_company_information_page, vendor_dashboard_page, vendor_notification_settings_page, vendor_orders_list_page, vendor_product_list_page, vendor_users_list_page, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;C:\Playwright\qa-automation-scripts\tests\test_system_admin_product_requests.py:11&quot;">file C:\Playwright\qa-automation-scripts\tests\test_system_admin_product_requests.py, line 11
  @dictionary_parametrize(
      {
          "Test_1": SystemAdminProductRequestParams.Test_1,
      }
  )
  def test_verify_system_admin_product_request_page_elements(
E       fixture 'system_admin_product_request_page' not found
&gt;       available fixtures: _artifacts_recorder, _pw_artifacts_folder, _session_faker, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, deployment_admin_account_balance_page, deployment_admin_connects_page, deployment_admin_dashboard_page, deployment_admin_items_list_page, deployment_admin_message_templates_page, deployment_admin_notification_settings_page, deployment_admin_send_order_list_page, deployment_admin_token_control, deployment_admin_users_and_groups_page, device, doctest_namespace, environment_to_run, extra, extras, faker, get_page, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, logs, metadata, monkeypatch, new_context, ontrack_login_page, ontrack_password, ontrack_username, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, revosend_forgot_password, revosend_signup, sender_account_balance_page, sender_connection_list_page, sender_connects_page, sender_notification_settings_page, system_admin_dashboard_page, system_admin_deployments_page, system_admin_items_list_page, system_admin_notification_settings_page, system_admin_product_requests_page, system_admin_send_order_list_page, system_admin_users_page, system_admin_vendors_page, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, vendor_company_information_page, vendor_dashboard_page, vendor_notification_settings_page, vendor_orders_list_page, vendor_product_list_page, vendor_users_list_page, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

C:\Playwright\qa-automation-scripts\tests\test_system_admin_product_requests.py:11</error></testcase><testcase classname="tests.test_system_admin_product_requests" name="test_verify_system_admin_product_request_page_add_item[chromium-Test_3]" time="0.078"><error message="failed on setup with &quot;file C:\Playwright\qa-automation-scripts\tests\test_system_admin_product_requests.py, line 62&#10;  @dictionary_parametrize(&#10;      {&#10;          &quot;Test_3&quot;: SystemAdminProductRequestParams.Test_3,&#10;      }&#10;  )&#10;  def test_verify_system_admin_product_request_page_add_item(&#10;E       fixture 'system_admin_product_request_page' not found&#10;&gt;       available fixtures: _artifacts_recorder, _pw_artifacts_folder, _session_faker, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, deployment_admin_account_balance_page, deployment_admin_connects_page, deployment_admin_dashboard_page, deployment_admin_items_list_page, deployment_admin_message_templates_page, deployment_admin_notification_settings_page, deployment_admin_send_order_list_page, deployment_admin_token_control, deployment_admin_users_and_groups_page, device, doctest_namespace, environment_to_run, extra, extras, faker, get_page, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, logs, metadata, monkeypatch, new_context, ontrack_login_page, ontrack_password, ontrack_username, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, revosend_forgot_password, revosend_signup, sender_account_balance_page, sender_connection_list_page, sender_connects_page, sender_notification_settings_page, system_admin_dashboard_page, system_admin_deployments_page, system_admin_items_list_page, system_admin_notification_settings_page, system_admin_product_requests_page, system_admin_send_order_list_page, system_admin_users_page, system_admin_vendors_page, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, vendor_company_information_page, vendor_dashboard_page, vendor_notification_settings_page, vendor_orders_list_page, vendor_product_list_page, vendor_users_list_page, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;C:\Playwright\qa-automation-scripts\tests\test_system_admin_product_requests.py:62&quot;">file C:\Playwright\qa-automation-scripts\tests\test_system_admin_product_requests.py, line 62
  @dictionary_parametrize(
      {
          "Test_3": SystemAdminProductRequestParams.Test_3,
      }
  )
  def test_verify_system_admin_product_request_page_add_item(
E       fixture 'system_admin_product_request_page' not found
&gt;       available fixtures: _artifacts_recorder, _pw_artifacts_folder, _session_faker, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, deployment_admin_account_balance_page, deployment_admin_connects_page, deployment_admin_dashboard_page, deployment_admin_items_list_page, deployment_admin_message_templates_page, deployment_admin_notification_settings_page, deployment_admin_send_order_list_page, deployment_admin_token_control, deployment_admin_users_and_groups_page, device, doctest_namespace, environment_to_run, extra, extras, faker, get_page, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, logs, metadata, monkeypatch, new_context, ontrack_login_page, ontrack_password, ontrack_username, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, revosend_forgot_password, revosend_signup, sender_account_balance_page, sender_connection_list_page, sender_connects_page, sender_notification_settings_page, system_admin_dashboard_page, system_admin_deployments_page, system_admin_items_list_page, system_admin_notification_settings_page, system_admin_product_requests_page, system_admin_send_order_list_page, system_admin_users_page, system_admin_vendors_page, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, vendor_company_information_page, vendor_dashboard_page, vendor_notification_settings_page, vendor_orders_list_page, vendor_product_list_page, vendor_users_list_page, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

C:\Playwright\qa-automation-scripts\tests\test_system_admin_product_requests.py:62</error></testcase><testcase classname="tests.test_system_admin_send_order_list" name="test_verify_system_admin_send_order_list_page_elements[chromium-Test_1]" time="0.070"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426658950&gt;
system_admin_send_order_list_page = &lt;pages.system_admin_send_order_list_page.SystemAdminSendOrderList object at 0x0000024425E7A7B0&gt;, tab_to_navigate = 'Send Order List'

    @dictionary_parametrize(
        {
            "Test_1": SystemAdminSendOrderListParams.Test_1,
        }
    )
    def test_verify_system_admin_send_order_list_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        system_admin_send_order_list_page,
        tab_to_navigate,
    ):
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_send_order_list.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426658950&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_send_order_list" name="test_apply_filter_on_system_admin_send_order_list_page[chromium-Test_2]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266A99D0&gt;
system_admin_send_order_list_page = &lt;pages.system_admin_send_order_list_page.SystemAdminSendOrderList object at 0x0000024426541590&gt;, tab_to_navigate = 'Send Order List'
available_filter_options = ['All Orders', 'Created', 'Acknowledged', 'Shipped', 'Completed', 'Custom']
expected_statuses = {'Acknowledged': ['Acknowledged'], 'All Users': ['Created'], 'Completed': ['Created', 'Shipped'], 'Created': ['Created'], ...}

    @dictionary_parametrize(
        {
            "Test_2": SystemAdminSendOrderListParams.Test_2,
        }
    )
    def test_apply_filter_on_system_admin_send_order_list_page(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        system_admin_send_order_list_page,
        tab_to_navigate,
        available_filter_options,
        expected_statuses,
    ):
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_send_order_list.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266A99D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_users" name="test_verify_users_page_fields[chromium-Test_1]" time="0.063"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442665BED0&gt;
system_admin_users_page = &lt;pages.system_admin_users_page.SystemAdminUsersPage object at 0x0000024425E78AD0&gt;, tab_to_navigate = 'Users'
headers_text = ['Profile Image', 'ID', 'User Type', 'Username', 'Email', 'Phone Number', ...]

    @dictionary_parametrize(
        {
            "Test_1": SystemAdminUsersParams.Test_1,
        }
    )
    @qase.title("User should be able to see all available fields on users list page")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on users list page",
        ),
    )
    def test_verify_users_page_fields(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        system_admin_users_page,
        tab_to_navigate,
        headers_text,
    ):
        """
        Regression test for users page fields verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_users.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442665BED0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_users" name="test_users_list_filters[chromium-Test_2]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_users_page = &lt;pages.system_admin_users_page.SystemAdminUsersPage object at 0x00000244261EA490&gt;
available_filter_options = ['All Users', 'Active Users', 'Inactive Users', 'Custom']
expected_statuses = {'Active Users': ['Active'], 'All Users': ['Active', 'Inactive'], 'Inactive Users': ['Inactive']}
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426782BD0&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Users'

    @dictionary_parametrize(
        {
            "Test_2": SystemAdminUsersParams.Test_2,
        }
    )
    @qase.title("system admin should be able filter users list data")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able filter users list data",
        ),
    )
    def test_users_list_filters(
        environment_to_run,
        system_admin_users_page,
        available_filter_options,
        expected_statuses,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
    ):
        """
        Regression test for users lists filters
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_users.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426782BD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_users" name="test_batch_action[chromium-Test_3]" time="0.076"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_users_page = &lt;pages.system_admin_users_page.SystemAdminUsersPage object at 0x0000024426542850&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442670DC50&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Users'

    @dictionary_parametrize(
        {
            "Test_3": SystemAdminUsersParams.Test_3,
        }
    )
    @qase.title("system admin should be able perform batch action on users list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able apply batch actions to users list(suspended, activate)",
        ),
    )
    def test_batch_action(
        environment_to_run,
        system_admin_users_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
    ):
        """
        Regression test for users lists Batch action
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_users.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442670DC50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_users" name="test_invite_system_admin_and_sender[chromium-Test_4]" time="0.071"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_users_page = &lt;pages.system_admin_users_page.SystemAdminUsersPage object at 0x0000024426541950&gt;, first_name = 'Dejcfz', last_name = 'Qxkjmr'
email = 'dejcfz.qxkjmr@testmail.com', user_type_select = ['System Admin', 'Sender'], ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442670D4D0&gt;
ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Users'

    @dictionary_parametrize(
        {
            "Test_4": SystemAdminUsersParams.Test_4,
        }
    )
    @qase.title("system admin should be able invite other users via invite button")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able to invite other users(vendor, deployment admin, sender, system admin) ",
        ),
    )
    def test_invite_system_admin_and_sender(
        environment_to_run,
        system_admin_users_page,
        first_name,
        last_name,
        email,
        user_type_select,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
    ):
        """
        Regression test for invite users functionality
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_users.py:166: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442670D4D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_users" name="test_invite_deployment_admin[chromium-Test_5]" time="0.069"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_users_page = &lt;pages.system_admin_users_page.SystemAdminUsersPage object at 0x0000024426540550&gt;, first_name = 'Dejcfz', last_name = 'Qxkjmr'
email = 'dejcfz.qxkjmr@testmail.com', user_type_select = 'Deployment Admin', ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442665A1D0&gt;
ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Users', deployment_name = 'Development Deployment'

    @dictionary_parametrize(
        {
            "Test_5": SystemAdminUsersParams.Test_5,
        }
    )
    @qase.title("system admin should be able invite deployment admin via invite button")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able to invite other users deployment admin",
        ),
    )
    def test_invite_deployment_admin(
        environment_to_run,
        system_admin_users_page,
        first_name,
        last_name,
        email,
        user_type_select,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
        deployment_name,
    ):
        """
        Regression test for invite users functionality
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_users.py:211: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442665A1D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_users" name="test_invite_vendor[chromium-Test_6]" time="0.091"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_users_page = &lt;pages.system_admin_users_page.SystemAdminUsersPage object at 0x0000024426540E10&gt;, first_name = 'Dejcfz', last_name = 'Qxkjmr'
email = 'dejcfz.qxkjmr@testmail.com', user_type_select = 'Vendor', ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265A60D0&gt;
ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Users', vendor_to_select = 'Tango E-Gift Provider'

    @dictionary_parametrize(
        {
            "Test_6": SystemAdminUsersParams.Test_6,
        }
    )
    @qase.title("system admin should be able invite vendor via invite button")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able to invite vendor ",
        ),
    )
    def test_invite_vendor(
        environment_to_run,
        system_admin_users_page,
        first_name,
        last_name,
        email,
        user_type_select,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
        vendor_to_select,
    ):
        """
        Regression test for invite users functionality
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_users.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265A60D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_users" name="test_active_and_suspend_single_user[chromium-Test_3]" time="0.079"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_users_page = &lt;pages.system_admin_users_page.SystemAdminUsersPage object at 0x00000244261E8E10&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268919D0&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Users'

    @dictionary_parametrize(
        {
            "Test_3": SystemAdminUsersParams.Test_3,
        }
    )
    @qase.title(
        "system admin should be able to active and suspend single user from actions"
    )
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able make single user suspend and active from active",
        ),
    )
    def test_active_and_suspend_single_user(
        environment_to_run,
        system_admin_users_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
    ):
        """
        Regression test for users lists Batch action
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_users.py:306: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268919D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_users" name="test_delete_user_from_list[chromium-Test_3]" time="0.072"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_users_page = &lt;pages.system_admin_users_page.SystemAdminUsersPage object at 0x00000244261E9E50&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267D02D0&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Users'

    @dictionary_parametrize(
        {
            "Test_3": SystemAdminUsersParams.Test_3,
        }
    )
    @qase.title("system admin should be able to delete users")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able delete any users",
        ),
    )
    def test_delete_user_from_list(
        environment_to_run,
        system_admin_users_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
    ):
        """
        Regression test for users lists Batch action
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_users.py:344: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267D02D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_vendors" name="test_verify_vendors_page_fields[chromium-Test_1]" time="0.079"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266AAED0&gt;
system_admin_vendors_page = &lt;pages.system_admin_vendors_page.SystemAdminVendorsPage object at 0x0000024425E78AD0&gt;, tab_to_navigate = 'Vendors'
headers_text = ['Logo', 'ID', 'Name', 'Address', 'Phone', 'Status', ...]

    @dictionary_parametrize(
        {
            "Test_1": SystemAdminVendorsParams.Test_1,
        }
    )
    @qase.title("User should be able to see all available fields on vendors list page")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on vendors list page",
        ),
    )
    def test_verify_vendors_page_fields(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        system_admin_vendors_page,
        tab_to_navigate,
        headers_text,
    ):
        """
        Regression test for users page fields verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_vendors.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244266AAED0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_vendors" name="test_vendors_list_filters[chromium-Test_2]" time="0.073"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_vendors_page = &lt;pages.system_admin_vendors_page.SystemAdminVendorsPage object at 0x0000024426542D50&gt;
available_filter_options = ['All Vendors', 'Active Vendors', 'Suspended Vendors', 'Custom']
expected_statuses = {'Active Users': ['Active'], 'All Users': ['Active', 'Inactive'], 'Suspended Users': ['Inactive']}
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265A5A50&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Vendors'

    @dictionary_parametrize(
        {
            "Test_2": SystemAdminVendorsParams.Test_2,
        }
    )
    @qase.title("system admin should be able filter vendors list data")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able filter vendors list data",
        ),
    )
    def test_vendors_list_filters(
        environment_to_run,
        system_admin_vendors_page,
        available_filter_options,
        expected_statuses,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
    ):
        """
        Regression test for vendors lists filters
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_vendors.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265A5A50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_vendors" name="test_batch_action_on_vendors_list[chromium-Test_3]" time="0.071"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_vendors_page = &lt;pages.system_admin_vendors_page.SystemAdminVendorsPage object at 0x0000024426541090&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267095D0&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Vendors'
success_message_text = ['Vendor Active', 'Vendor Inactive']

    @dictionary_parametrize(
        {
            "Test_3": SystemAdminVendorsParams.Test_3,
        }
    )
    @qase.title("system admin should be able perform batch action on vendors list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able apply batch actions to vendors list(delete item, suspended, activate)",
        ),
    )
    def test_batch_action_on_vendors_list(
        environment_to_run,
        system_admin_vendors_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
        success_message_text,
    ):
        """
        Regression test for vendors lists Batch action
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_vendors.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267095D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_vendors" name="test_add_vendor_functionality_on_vendors_list[chromium-Test_4]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_vendors_page = &lt;pages.system_admin_vendors_page.SystemAdminVendorsPage object at 0x0000024426541310&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F5C50&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Vendors'
success_message_text = 'Vendor Created Successfully', vendor_name = 'Mclean, Macias and Johnson', vendor_email = 'matthew33@example.com'
vendor_addressline_1 = '1827 Christopher Shore', vendor_addressline_2 = 'Apt. 923', vendor_city = 'New Timothyton', state_to_select = 'Alabama', zipcode = '90237'
phone_number = '001-408-003-5878x19998', select_vendor = 'AlexDoe'

    @dictionary_parametrize(
        {
            "Test_4": SystemAdminVendorsParams.Test_4,
        }
    )
    @qase.title("system admin should be able add new vendor on vendor list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able to add new vendor via vendors list page",
        ),
    )
    def test_add_vendor_functionality_on_vendors_list(
        environment_to_run,
        system_admin_vendors_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
        success_message_text,
        vendor_name,
        vendor_email,
        vendor_addressline_1,
        vendor_addressline_2,
        vendor_city,
        state_to_select,
        zipcode,
        phone_number,
        select_vendor,
    ):
        """
        Regression test for vendors lists add vendor feature
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_vendors.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F5C50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_vendors" name="test_active_inactive_vendor_functionality_on_vendors_list[chromium-Test_5]" time="0.072"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_vendors_page = &lt;pages.system_admin_vendors_page.SystemAdminVendorsPage object at 0x00000244261EB4D0&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668E6D0&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Vendors'
updated_vendor_message_text = ['Vendor Active', 'Vendor Inactive']

    @dictionary_parametrize({"Test_5": SystemAdminVendorsParams.Test_5})
    @qase.title("system should be able active or inactive any vendor from the actions")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system should be able active or inactive any vendor from the actions",
        ),
    )
    def test_active_inactive_vendor_functionality_on_vendors_list(
        environment_to_run,
        system_admin_vendors_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
        updated_vendor_message_text,
    ):
        """
        Regression test for vendors lists add vendor feature
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_vendors.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442668E6D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_system_admin_vendors" name="test_more_info_actions_functionality_on_vendors_list[chromium-Test_6]" time="0.070"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, system_admin_vendors_page = &lt;pages.system_admin_vendors_page.SystemAdminVendorsPage object at 0x00000244261E8B90&gt;
ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F5CD0&gt;, ontrack_password = None, ontrack_username = None, tab_to_navigate = 'Vendors'
orders_headers_text = ['Order Number', 'Batch ID', 'Name', 'Send Time', 'Current Status'], products_headers_text = ['ID', 'Thumbnail', 'Name', 'Current Orders']
users_headers_text = ['ID', 'Name', 'username', 'phonenumber', 'Email']

    @dictionary_parametrize({"Test_6": SystemAdminVendorsParams.Test_6})
    @qase.title("system admin should be able manage and delete any vendor from the actions")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "system admin should be able manage and delete any vendor from the actions",
        ),
    )
    def test_more_info_actions_functionality_on_vendors_list(
        environment_to_run,
        system_admin_vendors_page,
        ontrack_login_page,
        ontrack_password,
        ontrack_username,
        tab_to_navigate,
        orders_headers_text,
        products_headers_text,
        users_headers_text,
    ):
        """
        Regression test for vendors lists add vendor feature
        """
        # 1. Navigate to ontrack log, in page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_system_admin_vendors.py:259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F5CD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_company_information" name="test_verify_vendor_company_information_page_elements[chromium-Test_1]" time="0.063"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F55D0&gt;
vendor_company_information_page = &lt;pages.vendor_company_information_page.VendorCompanyInformationPage object at 0x0000024425E7A7B0&gt;, tab_to_navigate = 'Company Information'

    @dictionary_parametrize(
        {
            "Test_1": VendorCompanyInformationParams.test_1,
        }
    )
    @qase.title("Verify vendor company information page elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on vendor company information page",
        ),
    )
    def test_verify_vendor_company_information_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        vendor_company_information_page,
        tab_to_navigate,
        #select_role,
    ):
        """
        Regression test for vendor company information page elements verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_company_information.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F55D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_company_information" name="test_verify_and_edit_vendor_company_information[chromium-Test_2]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426732550&gt;
vendor_company_information_page = &lt;pages.vendor_company_information_page.VendorCompanyInformationPage object at 0x0000024426540190&gt;, tab_to_navigate = 'Company Information'
success_message_text = 'Updated Company Information Successfully', updated_email = 'ykgs5e37@test.com'

    @dictionary_parametrize(
        {
            "Test_2": VendorCompanyInformationParams.test_2,
        }
    )
    @qase.title("Verify and edit vendor company information ")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify and edit company information",
        ),
    )
    def test_verify_and_edit_vendor_company_information(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        vendor_company_information_page,
        tab_to_navigate,
        success_message_text,
        #select_role,
        updated_email,
    ):
        """
        Regression test for edit vendor company information
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_company_information.py:84: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426732550&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_dashboard" name="test_verify_vendor_dashboard_page_elements[chromium-Test_1]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426732250&gt;
vendor_dashboard_page = &lt;pages.vendor_dashboard_page.VendorDashboardPage object at 0x0000024425E78AD0&gt;
most_sold_products_by_publish_table_headers = ['ID', 'Name', 'Total Orders', 'Total Revenue']
sold_products_this_week_table_headers = ['Name', 'Integration', 'Total Orders', 'Total Revenue']

    @dictionary_parametrize(
        {
            "Test_1": VendorDashboardParams.Test_1,
        }
    )
    @qase.title("Verify vendor Dashboard elements")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify all fields of vendor Dashboard",
        ),
    )
    def test_verify_vendor_dashboard_page_elements(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            vendor_dashboard_page,
            #role_to_change,
            most_sold_products_by_publish_table_headers,
            sold_products_this_week_table_headers,
    ):
        """
        Regression test for items list page fields verification
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_dashboard.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426732250&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_notification_setting" name="test_verify_vendor_notification_page_elements[chromium-Test_1]" time="0.064"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442665A1D0&gt;
vendor_notification_settings_page = &lt;pages.vendor_notification_settings_page.VendorNotificationPage object at 0x0000024425E7A510&gt;
success_message_text = 'Notification updated successfully', change_to_notification = 'Settings'

    @dictionary_parametrize(
        {
            "Test_1": VendorNotificationParams.test_1,
        }
    )
    @qase.title(
        "Verify vendor notification page elements and checked and unchecked functionality "
    )
    # @qase.id(1)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on vendor notification page",
        ),
    )
    def test_verify_vendor_notification_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        vendor_notification_settings_page,
        #select_role,
        success_message_text,
        change_to_notification,
    ):
        """
        Regression test for vendor notification page elements and checked and unchecked functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_notification_setting.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442665A1D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_orders_list" name="test_verify_vendor_orders_list_page_elements[chromium-Test_1]" time="0.065"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268D9E50&gt;
vendor_orders_list_page = &lt;pages.vendor_orders_list_page.VendorOrdersListPage object at 0x000002442615E120&gt;, tab_to_navigate = 'Orders List'
users_table_headers = ['Order Number', 'Order Date', 'Item Name', 'Current Status', 'Actions']

    @dictionary_parametrize(
        {
            "Test_1": VendorOrdersListParams.test_1,
        }
    )
    @qase.title("Verify vendor orders list page elements")
    # @qase.id(1)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all available fields on vendor orders list page",
        ),
    )
    def test_verify_vendor_orders_list_page_elements(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        vendor_orders_list_page,
        #select_role,
        tab_to_navigate,
        users_table_headers
    ):
        # Log in to the application
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_orders_list.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268D9E50&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_orders_list" name="test_verify_vendor_orders_list_filtered_data[chromium-Test_1]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268169D0&gt;
vendor_orders_list_page = &lt;pages.vendor_orders_list_page.VendorOrdersListPage object at 0x00000244261EBC50&gt;, tab_to_navigate = 'Orders List'
available_filter_options = ['All Orders', 'Created Orders', 'Acknowledged Orders', 'Processing Orders', 'Shipped Orders', 'Completed Orders', ...]
expected_statuses = {'Acknowledged Orders': ['Acknowledged'], 'All Orders': ['Canceled', 'Shipped', 'Processing'], 'Cancelled Orders': ['Canceled'], 'Completed Orders': ['Completed'], ...}

    @dictionary_parametrize(
        {
            "Test_1": VendorOrdersListParams.Test_2,
        }
    )
    @qase.title("Verify order list filter data ")
    # @qase.id(1)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
            "description",
            "Verify all filtered data with statues",
        ),
    )
    def test_verify_vendor_orders_list_filtered_data(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        vendor_orders_list_page,
        #select_role,
        tab_to_navigate,
        available_filter_options,
        expected_statuses
    ):
        # Log in to the application
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_orders_list.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268169D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_product_list" name="test_verify_vendor_product_list_page_elements[chromium-Test_1]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268DBED0&gt;
vendor_product_list_page = &lt;pages.vendor_product_list_page.VendorProductListPage object at 0x000002442615DD30&gt;, tab_to_navigate = 'Product List'
headers_text = [['Thumbnail', 'Name', 'Status', 'Actions']]

    @dictionary_parametrize(
        {
            "Test_1": VendorProductListParams.test_1,
        }
    )
    @qase.title("Verify vendor product list page elements")
    # @qase.id(1)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify all available fields on vendor product list page",
        ),
    )
    def test_verify_vendor_product_list_page_elements(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            vendor_product_list_page,
            #select_role,
            tab_to_navigate,
            headers_text
    ):
        # Log in to the application
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_product_list.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268DBED0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_product_list" name="test_apply_filter_on_products_list_data[chromium-Test_2]" time="0.076"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426939750&gt;
vendor_product_list_page = &lt;pages.vendor_product_list_page.VendorProductListPage object at 0x000002442669D6D0&gt;, tab_to_navigate = 'Product List'
available_filter_options = ['All Products', 'Pending Products', 'Approved Products', 'Declined Products']
expected_statuses = {'All Products': ['Approved', 'On Hold By Admin'], 'Approved Products': ['Approved', 'On Hold By Admin'], 'Declined Products': ['Declined'], 'Pending Products': ['Pending']}

    @dictionary_parametrize(
        {
            "Test_2": VendorProductListParams.Test_2,
        }
    )
    @qase.title("Apply filter on products list data and verify filtered data on products list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Apply filter on products list data and verify filtered data on products list",
        ),
    )
    def test_apply_filter_on_products_list_data(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            #select_role,
            vendor_product_list_page,
            tab_to_navigate,
            available_filter_options,
            expected_statuses,
    ):
        """
        Regression test for products list filter functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_product_list.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426939750&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_product_list" name="test_add_product_request_element_verification[chromium-Test_0]" time="0.072"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442692E050&gt;
vendor_product_list_page = &lt;pages.vendor_product_list_page.VendorProductListPage object at 0x000002442669D090&gt;, tab_to_navigate = 'Product List'

    @qase.title("Add Product Request and Verify Element Visibility &amp; Values")
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        ("description",
         "Verify that the elements are visible and contain correct values in the Add Product Request process."),
    )
    @dictionary_parametrize(
        {
            "Test_0": VendorProductListParams.Test_0,  # Fetching parameters from VendorProductListParams
        }
    )
    def test_add_product_request_element_verification(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            vendor_product_list_page,
            tab_to_navigate,
    ):
        """
        Test case to add a product request and verify the element visibility and values.
        """
    
        # Step 1: Open and verify the Ontrack login page with provided credentials
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_product_list.py:121: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442692E050&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_product_list" name="test_add_product_flow[chromium-Test_3]" time="0.074"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244269375D0&gt;
vendor_product_list_page = &lt;pages.vendor_product_list_page.VendorProductListPage object at 0x0000024426540E10&gt;, tab_to_navigate = 'Product List', product_name = 'Product VWWOUBEY'
category = 'Customer appreciation', product_price = '105.76', product_shipping_rate = '20.81', product_type = 'eGift'
description = 'NJOLV vyiy emelxs. TFNWO grho bwkjlv. GUOPG urox bnfvzr. WHIDS dbii qkdixm. JXVQQ jtlk itmgrk.', image_path = 'resources/download.jpg'
success_message_text = 'Product Request is sent'

    @dictionary_parametrize(
        {
            "Test_3": VendorProductListParams.Test_3,
        }
    )
    @qase.title("Verify product list add product functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "adding new product and send product request to system admin",
        ),
    )
    def test_add_product_flow(
    environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        vendor_product_list_page,
        tab_to_navigate,
        product_name,
        category,
        product_price,
        product_shipping_rate,
        product_type,
        description,
        image_path,
        success_message_text
    ):
        """
        Regression test for add product functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_product_list.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244269375D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_product_list" name="test_update_product_flow[chromium-Test_Update_1]" time="0.068"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426936550&gt;
vendor_product_list_page = &lt;pages.vendor_product_list_page.VendorProductListPage object at 0x0000024426541F90&gt;, tab_to_navigate = 'Product List', product_name = 'Product VWWOUBEY'
category = 'Customer appreciation', product_price = '105.76', product_shipping_rate = '20.81', product_type = 'eGift'
description = 'NJOLV vyiy emelxs. TFNWO grho bwkjlv. GUOPG urox bnfvzr. WHIDS dbii qkdixm. JXVQQ jtlk itmgrk.', image_path = 'resources/download.jpg'
success_message_text = 'Product Request is sent'

    @dictionary_parametrize(
        {
            "Test_Update_1": VendorProductListParams.Test_3,
        }
    )
    @qase.title("Verify product list update product functionality")
    # @qase.id(3)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Updating existing product and sending updated request to system admin",
        ),
    )
    def test_update_product_flow(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            vendor_product_list_page,
            tab_to_navigate,
            product_name,
            category,
            product_price,
            product_shipping_rate,
            product_type,
            description,
            image_path,
            success_message_text
    ):
        """
        Regression test for update product functionality
        """
        # 1. Navigate to ontrack login page and verify all elements of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_product_list.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426936550&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_product_list" name="test_request_support_flow[chromium-Test_4]" time="0.080"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268B6350&gt;
vendor_product_list_page = &lt;pages.vendor_product_list_page.VendorProductListPage object at 0x0000024426540A50&gt;, tab_to_navigate = 'Product List'
request_subject = 'Feature request'
request_description = 'Qgbeleyhbm Hkxvvlfh Hdjczhqasm Ekjslsya Xfizcxy Pieekrupe Lfgkssyopk Oefvwqq Gyclpk Lbpkwdfczug Cuinwzxhpz Bwsaii Rlcyraji Iqzczd Clpwrcg Ypxgjtwnxob Ixziop.'
success_message_text = 'Your request for support from the system administrators has been sent successfully'

    @dictionary_parametrize(
        {
            "Test_4": VendorProductListParams.Test_4,
        }
    )
    @qase.title("Verify request support functionality and sent request")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "test request support functionality",
        ),
    )
    def test_request_support_flow(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            #select_role,
            vendor_product_list_page,
            tab_to_navigate,
            request_subject,
            request_description, success_message_text
    ):
        """
        Regression test for request support functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_product_list.py:285: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268B6350&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_product_list" name="test_change_order_product_flow[chromium-Test_Update_1-Test_5]" time="0.065"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426708AD0&gt;
vendor_product_list_page = &lt;pages.vendor_product_list_page.VendorProductListPage object at 0x0000024426543C50&gt;, tab_to_navigate = 'Product List'
available_filter_options = ['Approved Products'], expected_statuses = {'Approved Products': ['Approved', 'On Hold By Admin']}, product_name = 'Product VWWOUBEY'
category = 'Customer appreciation', product_price = '105.76', product_shipping_rate = '20.81'
description = 'NJOLV vyiy emelxs. TFNWO grho bwkjlv. GUOPG urox bnfvzr. WHIDS dbii qkdixm. JXVQQ jtlk itmgrk.', image_path = 'resources/download.jpg'
success_message_text = 'Product Request is sent'

    @dictionary_parametrize(
        {
            "Test_5": VendorProductListParams.Test_5,
        }
    )
    @qase.title("Verify enable/disable and edit action")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "enable/disable product and edit product on product list page",
        ),
    )
    
    
    @dictionary_parametrize(
        {
            "Test_Update_1": VendorProductListParams.Test_6,
        }
    )
    @qase.title("Verify product list update product functionality")
    # @qase.id(3)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Updating existing product and sending updated request to system admin",
        ),
    )
    def test_change_order_product_flow(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            vendor_product_list_page,
            tab_to_navigate,
            available_filter_options,
            expected_statuses,
            product_name,
            category,
            product_price,
            product_shipping_rate,
            description,
            image_path,
            success_message_text
    ):
        """
        Regression test for update product functionality
        """
        # 1. Navigate to ontrack login page and verify all elements of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_product_list.py:355: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426708AD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_product_list" name="test_enable_disable_and_edit_actions[chromium-Test_Update_1]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426733CD0&gt;
vendor_product_list_page = &lt;pages.vendor_product_list_page.VendorProductListPage object at 0x00000244265411D0&gt;, tab_to_navigate = 'Product List'
available_filter_options = ['Approved Products'], expected_statuses = {'Approved Products': ['Approved', 'On Hold By Admin']}

    @dictionary_parametrize(
        {
            "Test_Update_1": VendorProductListParams.Test_7,
        }
    )
    @qase.title("Verify Edit product disable functionality")
    # @qase.id(3)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Edit product disable functionality",
        ),
    )
    
    def test_enable_disable_and_edit_actions(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            vendor_product_list_page,
            tab_to_navigate,
            available_filter_options,
            expected_statuses,
    ):
        """
        Regression test for enable/disable and edit action
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_product_list.py:410: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426733CD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_product_list" name="test_batch_action_delete_product_item[chromium-Test_Update_1]" time="0.066"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F4DD0&gt;
vendor_product_list_page = &lt;pages.vendor_product_list_page.VendorProductListPage object at 0x000002442669D6D0&gt;, tab_to_navigate = 'Product List'
available_filter_options = ['Pending Products', 'Declined Products'], expected_statuses = {'Declined Products': ['Declined'], 'Pending Products': ['Pending']}
success_message_text = 'Product Deleted Successfully'

    @dictionary_parametrize(
        {
            "Test_Update_1": VendorProductListParams.Test_8,
        }
    )
    @qase.title("Verify batch action Deleted item")
    # @qase.id(3)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        ("description", "Verify batch action Deleted item"),
    )
    def test_batch_action_delete_product_item(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            vendor_product_list_page,
            tab_to_navigate,
            available_filter_options,
            expected_statuses,
            success_message_text
    ):
        """
        Test for verifying the edit product disable functionality in the vendor product list.
        """
        # 1. Navigate to Ontrack login page and verify all elements on the login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_product_list.py:457: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244267F4DD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_users" name="test_vendor_users_list_page_elements[chromium-Test_1]" time="0.067"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265A6950&gt;
vendor_users_list_page = &lt;pages.vendor_users_page.VendorUsersListPage object at 0x0000024425E7A510&gt;
users_table_headers = ['Profile Image', 'ID', 'Username', 'Email', 'Phone Number', 'Status', ...], tab_to_navigate = 'Users'

    @dictionary_parametrize(
        {
            "Test_1": VendorUsersListParams.test_1,
        }
    )
    @qase.title("Verify vendor users list page elements")
    # @qase.id(1)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify all available fields on vendor users list page",
        ),
    )
    def test_vendor_users_list_page_elements(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            vendor_users_list_page,
            #select_role,
            users_table_headers,
            tab_to_navigate,
    ):
        # Log in to the application
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_users.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244265A6950&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_users" name="test_apply_filter_on_vendor_users_data[chromium-Test_2]" time="0.063"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268D8FD0&gt;
vendor_users_list_page = &lt;pages.vendor_users_page.VendorUsersListPage object at 0x0000024426542D50&gt;, tab_to_navigate = 'Users'
available_filter_options = ['All Users', 'Activated', 'Archived', 'Deactivated', 'Custom']
expected_statuses = {'Activated': ['Activated'], 'All Users': ['Activated', 'Deactivated'], 'Archived': ['Activated', 'Deactivated'], 'Custom': ['Activated', 'Deactivated'], ...}

    @dictionary_parametrize(
        {
            "Test_2": VendorUsersListParams.Test_2,
        }
    )
    @qase.title("Apply filter on users list data and verify filtered data on users list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Apply filter on users list data and verify filtered data on users list",
        ),
    )
    def test_apply_filter_on_vendor_users_data(
        environment_to_run,
        ontrack_username,
        ontrack_password,
        ontrack_login_page,
        vendor_users_list_page,
        tab_to_navigate,
        available_filter_options,
        expected_statuses,
    ):
        """
        Regression test for users list filter functionality
        """
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_users.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268D8FD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_users" name="test_apply_batch_action_on_vendor_users_to_changes_current_status_in_bulk[chromium-Test_3]" time="0.069"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442693ACD0&gt;
vendor_users_list_page = &lt;pages.vendor_users_page.VendorUsersListPage object at 0x00000244265434D0&gt;, tab_to_navigate = 'Users'

    @dictionary_parametrize(
        {
            "Test_3": VendorUsersListParams.Test_3,
        }
    )
    @qase.title("Apply batch action on users to change status of users")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "apply batch action on multiple users at time to change status",
        ),
    )
    def test_apply_batch_action_on_vendor_users_to_changes_current_status_in_bulk(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            #select_role,
            vendor_users_list_page,
            tab_to_navigate,
    ):
        """
        Regression test for batch action functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_users.py:116: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x000002442693ACD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_users" name="test_vendor_invite_user_flow[chromium-Test_4]" time="0.088"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426936BD0&gt;
user_email = 'htqgrd.fkaouz@example.com', vendor_users_list_page = &lt;pages.vendor_users_page.VendorUsersListPage object at 0x0000024426541810&gt;, tab_to_navigate = 'Users'
user_name = 'Htqgrd', success_message = 'Invitation Sent Successfully', user_last_name = 'Fkaouz'

    @dictionary_parametrize(
        {
            "Test_4": VendorUsersListParams.Test_4,
        }
    )
    @qase.title("Verify users list invite user functionality")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "using invite user functionality, invite user ",
        ),
    )
    def test_vendor_invite_user_flow(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            #select_role,
            user_email,
            vendor_users_list_page,
            tab_to_navigate,
            user_name,
            success_message,
            user_last_name
    ):
        """
        Regression test for invite user functionality
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_users.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426936BD0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_users" name="test_active_and_inactive_and_delete_action_of_users_list[chromium-Test_5]" time="0.094"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268156D0&gt;
vendor_users_list_page = &lt;pages.vendor_users_page.VendorUsersListPage object at 0x00000244261EA5D0&gt;, tab_to_navigate = 'Users'

    @dictionary_parametrize(
        {
            "Test_5": VendorUsersListParams.Test_3,
        }
    )
    @qase.title("Verify active/inactive and delete action functionality on users list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify and perform active/inactive and delete actions functionality on users list",
        ),
    )
    def test_active_and_inactive_and_delete_action_of_users_list(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            #select_role,
            vendor_users_list_page,
            tab_to_navigate,
    ):
        """
        Regression test for active/inactive and delete action functionality on users list
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_users.py:211: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x00000244268156D0&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase><testcase classname="tests.test_vendor_users" name="test_user_information_of_users_list[chromium-Test_5]" time="0.120"><failure message="ValueError: Environment is empty. Cannot build RevoSend URL.">environment_to_run = None, ontrack_username = None, ontrack_password = None, ontrack_login_page = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426708350&gt;
vendor_users_list_page = &lt;pages.vendor_users_page.VendorUsersListPage object at 0x000002442669ED50&gt;, tab_to_navigate = 'Users'

    @dictionary_parametrize(
        {
            "Test_5": VendorUsersListParams.Test_3,
        }
    )
    @qase.title("Verify user information functionality on users list")
    # @qase.id(2)
    @qase.fields(
        ("severity", "major"),
        ("priority", "high"),
        (
                "description",
                "Verify and perform user information functionality on users list",
        ),
    )
    def test_user_information_of_users_list(
            environment_to_run,
            ontrack_username,
            ontrack_password,
            ontrack_login_page,
            #select_role,
            vendor_users_list_page,
            tab_to_navigate,
    ):
        """
        Regression test for user information functionality on users list
        """
        # 1. Navigate to ontrack login page and verify all element of login page
&gt;       ontrack_login_page.open_and_verify_ontrack_login_page(
            environment_to_run, ontrack_username, ontrack_password
        )

tests\test_vendor_users.py:254: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities\decorators.py:14: in wrapper_decorator
    value = func(self, *args, **kwargs)
C:\Users\tejas\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:85: in inner
    return func(*args, **kwds)
pages\ontrack_login_page.py:89: in open_and_verify_ontrack_login_page
    self.open_revosend(environment_to_run)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;pages.ontrack_login_page.OntrackLoginPage object at 0x0000024426708350&gt;, environment_to_run = None

    def open_revosend(self, environment_to_run):
        """
        Open the RevoSend login page.
        :param environment_to_run: e.g., 'test', 'stage', 'prod'
        """
        env = utils.login_form_run_environment(environment_to_run)
    
        if not env:
&gt;           raise ValueError("Environment is empty. Cannot build RevoSend URL.")
E           ValueError: Environment is empty. Cannot build RevoSend URL.

pages\ontrack_login_page.py:60: ValueError</failure></testcase></testsuite></testsuites>